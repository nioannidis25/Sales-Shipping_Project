<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Tableau - Final Assignment)' inline='true' name='federated.0k5cgf30lvzlef13xi8o81k015af' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau - Final Assignment' name='excel-direct.0ge7kvu1yt5v6n12zgtjb04wytpi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nioan/OneDrive/Υπολογιστής/workearly/tableau/Tableau - Final Assignment.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ge7kvu1yt5v6n12zgtjb04wytpi' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_315389ECEF794931AFC5E55BD6A5F667]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_315389ECEF794931AFC5E55BD6A5F667]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_315389ECEF794931AFC5E55BD6A5F667]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[pcto:sum:Discount:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/nioan/AppData/Local/Temp/TableauTemp/#TableauTemp_10hoi9n0up63zw16jdhhz0niznek.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/11/2024 11:16:17 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_315389ECEF794931AFC5E55BD6A5F667]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]' palette='tableau-10-medium' type='palette'>
            <map to='#6dccda'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#a8786e'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#ed665d'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0k5cgf30lvzlef13xi8o81k015af].[__tableau_internal_object_id__].[cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0k5cgf30lvzlef13xi8o81k015af].[__tableau_internal_object_id__].[pcto:cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0k5cgf30lvzlef13xi8o81k015af].[pcto:sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_315389ECEF794931AFC5E55BD6A5F667'>
            <properties context=''>
              <relation connection='excel-direct.0ge7kvu1yt5v6n12zgtjb04wytpi' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Profit/ Ship Mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.0k5cgf30lvzlef13xi8o81k015af' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5cgf30lvzlef13xi8o81k015af'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' filter-group='3'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Ship Mode:nk]' />
              <size column='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Profit:qk]' />
              <text column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Ship Mode:nk]' />
              <text column='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Profit:qk]' />
              <text column='[federated.0k5cgf30lvzlef13xi8o81k015af].[pcto:sum:Profit:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Ship Mode:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Profit:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.0k5cgf30lvzlef13xi8o81k015af].[pcto:sum:Profit:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B4388F60-DA85-4D62-BD25-D88B9A05C5BF}' />
    </worksheet>
    <worksheet name='Profit/Category,Sub-Cat'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.0k5cgf30lvzlef13xi8o81k015af' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5cgf30lvzlef13xi8o81k015af'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' filter-group='3'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Category:nk]' />
              <text column='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0k5cgf30lvzlef13xi8o81k015af].[none:Category:nk] / [federated.0k5cgf30lvzlef13xi8o81k015af].[none:Sub-Category:nk])</rows>
        <cols>[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{1F56AE58-9E33-4B2C-97F4-275D20088AD8}' />
    </worksheet>
    <worksheet name='Sales/ City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.0k5cgf30lvzlef13xi8o81k015af' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5cgf30lvzlef13xi8o81k015af'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' filter-group='3'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Sales:qk]' />
              <size column='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Sales:qk]' />
              <text column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C70500D7-4545-4C55-A013-1086C36ABABD}' />
    </worksheet>
    <worksheet name='Sales/Seg,Cat,Ship'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.0k5cgf30lvzlef13xi8o81k015af' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5cgf30lvzlef13xi8o81k015af'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Segment:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Sales:qk]</rows>
        <cols>([federated.0k5cgf30lvzlef13xi8o81k015af].[none:Category:nk] / [federated.0k5cgf30lvzlef13xi8o81k015af].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{0721DC2C-1546-4810-AEC8-C94B618957F4}' />
    </worksheet>
    <worksheet name='Top 5 Sales/City'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.0k5cgf30lvzlef13xi8o81k015af' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5cgf30lvzlef13xi8o81k015af'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' filter-group='3'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Sales:qk]</rows>
        <cols>[federated.0k5cgf30lvzlef13xi8o81k015af].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{82397FB8-0C97-4B36-B46A-EA24E95BE9B4}' />
    </worksheet>
    <worksheet name='dis,orders/sub-cat'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.0k5cgf30lvzlef13xi8o81k015af' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5cgf30lvzlef13xi8o81k015af'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_315389ECEF794931AFC5E55BD6A5F667]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_315389ECEF794931AFC5E55BD6A5F667]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[pcto:sum:Discount:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' filter-group='3'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0k5cgf30lvzlef13xi8o81k015af].[__tableau_internal_object_id__].[cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0k5cgf30lvzlef13xi8o81k015af].[pcto:sum:Discount:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk]' />
              <text column='[federated.0k5cgf30lvzlef13xi8o81k015af].[pcto:sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0k5cgf30lvzlef13xi8o81k015af].[__tableau_internal_object_id__].[cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0k5cgf30lvzlef13xi8o81k015af].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Sub-Category:nk]</rows>
        <cols>([federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk] + [federated.0k5cgf30lvzlef13xi8o81k015af].[__tableau_internal_object_id__].[cnt:Orders_315389ECEF794931AFC5E55BD6A5F667:qk])</cols>
      </table>
      <simple-id uuid='{E5C6C2FA-6408-4477-9FB2-AB08EA4924C9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='5' type-v2='layout-basic' w='99034' x='483' y='999'>
              <zone h='50811' id='3' name='Profit/Category,Sub-Cat' w='41125' x='58392' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47191' id='9' name='Profit/ Ship Mode' w='26011' x='483' y='51810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50811' id='12' name='Sales/ City' w='28955' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47191' id='14' name='Top 5 Sales/City' w='34822' x='64695' y='51810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47191' id='16' name='Sales/Seg,Cat,Ship' w='38201' x='26494' y='51810'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50811' id='18' name='dis,orders/sub-cat' w='28954' x='29438' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='280' h='50811' id='12' is-fixed='true' name='Sales/ City' w='28955' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50811' id='18' is-fixed='true' name='dis,orders/sub-cat' w='28954' x='29438' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50811' id='3' is-fixed='true' name='Profit/Category,Sub-Cat' w='41125' x='58392' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47191' id='9' is-fixed='true' name='Profit/ Ship Mode' w='26011' x='483' y='51810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47191' id='16' is-fixed='true' name='Sales/Seg,Cat,Ship' w='38201' x='26494' y='51810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47191' id='14' is-fixed='true' name='Top 5 Sales/City' w='34822' x='64695' y='51810'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{90CC7063-DBA5-4A2A-93FE-7EE239AB8278}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Profit/Category,Sub-Cat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0D4018F3-0568-440B-92CE-683B7949889D}' />
    </window>
    <window class='worksheet' name='Profit/ Ship Mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Ship Mode:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{464DE679-A066-43CB-8883-B31A6776AC7C}' />
    </window>
    <window class='worksheet' name='Sales/ City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F154F61D-2CB0-49C4-8BC3-C7C42F447C21}' />
    </window>
    <window class='worksheet' name='Top 5 Sales/City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C9F943AA-32AB-4DB5-8A9A-0FE3194E6390}' />
    </window>
    <window class='worksheet' name='Sales/Seg,Cat,Ship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0A75699F-F74A-45B0-B3CA-0DF49BEA7536}' />
    </window>
    <window class='worksheet' name='dis,orders/sub-cat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Sub-Category:nk]</field>
            <field>[federated.0k5cgf30lvzlef13xi8o81k015af].[sum:Discount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47DE43D8-8A66-49ED-9596-F152495B9B05}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profit/ Ship Mode'>
          <zoom type='entire-view' />
          <highlight field='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:Ship Mode:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit/Category,Sub-Cat' />
        <viewpoint name='Sales/ City' />
        <viewpoint name='Sales/Seg,Cat,Ship'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Sales/City'>
          <zoom type='entire-view' />
          <highlight field='[federated.0k5cgf30lvzlef13xi8o81k015af].[none:City:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='dis,orders/sub-cat' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9B6B6FDE-66C2-4519-BE73-88164C522DEC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      D/CTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit/ Ship Mode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit/Category,Sub-Cat' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29V3BcaXbn+bv3pvcemfAAQRAkQe9tkVVkdff0qiemS6a7FTETCoX0rJd5
      mY3Y0MvGRkzM02zsw75IitBK07Hq6W7NqGulpimWIwnCe+89kN67e+8+gMUuIzoQJMjE/b0l
      Mj9zE/n/zDnfOZ+gqqqKhsYeRdztDmho7CaaADT2NJoAdoFsNrvbXdB4jCaAXSCZTO52FzQe
      owlAY0+jCUBjT6MJQGNPowlAY0+jCUBjT6MJQGNPowlAY08jfP0sUC6XI5VK7WZ/9gTJZBKH
      w7Hb3dAAdF9/YTKZMBgMu9WXPYMsy3i93h2vt1Qqodfrd7ze3WpbVlQKxfIzP1MsFnDYLIji
      9hYz3xCAIAhIkrT1QikRDkcoySo6kw2/2/7ClRYyKQSTDYMkbKtT20YusRGOICsqJqsDl8PK
      M3ugyGSLZSwm45vqIfCt73kHkWX5tdS7W20/HFngP/+3+8/8zMl9Pv7X/3Bt220/XTaZTT7p
      GCAcDpNIv9zZlWI+R0mB8NIEC+E3eO4lvcKDgSnC4U36H33Bcrzw7M8XkvSPz72Rru1lZFmm
      v7+fL7/8klKpRLFYpKOjg4mJCVRVpVAo0NHRQUdHB+Xys0f879Zd5lVO9Oue9aarqo4jRw4C
      MD/WjSF0lJCyyMNNO026JeYiMqLJg72wxlq+RC5V4Nj5K+RmFrAdMdN3/ws2RT8nTp8jtTHH
      +bNnWZsdJW+pJbU5jZKKo68+iC23yuTSBpK9mqvn2l9pZx6oa+Zwi4+B5CYlWWF26BETKzEM
      Fj8XLx5lpreDxXAao7uWK0eqAchGlxlZyXO00cn9B92UdA7OXTzC2P0O4sUywZaj7LPn+aJ3
      AoPFwelzZwlP9jG9GsHorudsW4CH9x9RFAwcO3eVgP2ZX+ue4969e6RSKfx+P9lslk8++QRJ
      knj06BFGo5G5uTlkWSaRSBCPx/ne9773wnUrrxjO8szf2urUALdu3aJ7bJ5CLkNJVkEukMqV
      yCWi4KzjVHsTxSIcO3eJc4f3kUolKaTTKJKF9mNHOHn+PQ43Bp5srouFHIWSTGJ1AU/rGdoC
      erqHJigrsDzYzXrxlZ6HmaFH3L7zCZGSCY8uzWzcyAc3PqTVW2BkdJowbm58+CEhZYXFNKxN
      93Gvb5HDB5pYnhyh/tR1Prh6FpvBjMttBaXA2Pgs6XgMxeSk/cgRzMUI3cMzKAosDHSzmsqQ
      KYu0HTmGx7I7S5C3lWKxSF9fHxsbG8zOzmIwGAiHw3z/+9/nxz/+MV1dXVy5coXr16/j8/le
      eg+q1+kRhO0vtZ85VIVajnLz7NYMMNE7j/J4ulIBnclCdbAKUQBBkDDodRRFEb4lSEVRUVUV
      AVAUhWKhCDbQO6uodlsgn8dR1cjVS2cQyiWEV9yDN7ef5fyBEOuz/Swsx0BVABVVUREEEVUt
      oaoqqgoCEGw+hC4RIZYtIIoiZUUBJIqrgyyLDbx/bT/37k/hbGrnWk2egc7PcdUfxFXTwrUL
      x6FcAkkk+J6HheEHdCeOc67V92oPUQHE43H+5m/+hhMnTpBOp/mTP/kT5ubm+NWvfoVer0eS
      JMxmM7IsUyqV+NWvfoXJZOJHP/rRG+3n0wUgGXBazU9e+gJVdDy6x5JBxlFXg0FvQ3082Jlt
      NkRAZzBiVvXIDgcGAUy+IEOP7iOqp2ipsvPbO3cRZIUDIQmbzYoggGh20eiCu7duYbb5OXvp
      BNseQyUjm1M93F4cAp2Fs+fbcdDH3du3MdoDXDjXxGx/F3du38bireeiQyIRd3D4UCMPe8c4
      2X6Izo7PmZMcnD5WT2mln/txMxgcZCLLDAxPo0gOWoPVCIlV7ty+hdUR5Gh7iIFHA+RkgYMt
      1u32vqJwuVz8xV/8BYqiMDw8TDqdxuPxIEkS+XyejY0NRkZGqK2t5c6dO7S0tHDq1KmXHs3L
      5VfbAwhaTPCbZ21tjWAwuOP1FovFXTNjP6vtpaUlfv3rXyNJEn/8x39MPB7n17/+NQ6Hg5/8
      5Cf87d/+LfF4HFEUee+99zh9+jQAo/NhfvX56DPbrfUY+enNE9s2wWoC2AX2mgBeJ9lsFoPB
      gE63PcODZq7QeKeRFZVMvoQkKtsqX3ECkEt5wuEYOpMNl81ICQHTU6bHciFHUdVhMe2O91Tj
      1embCfNffv5g2+UrSgBqOcuDz+9j8VahF1OoXj0bZTOH6v/15YZSLlFUBE0Ae5iKEkBieRp9
      6CAn2moQBEitTDEz3MPquIgt2MbxJjudj3rIFWWaTlzGU14jrPgprMyzWkqQyNtpNKcZXYrh
      DDVx/sh+XsHErPEOUFHHoTPpIg6H5Ws/WpG61iNc/+AmSmYNncGM3WZGJcP4yALlYp5coUwp
      HyUrVXHlVCuJaAxHsIHDLXV8x6mhUXFUlAC8VS6W55cpKyrlUgkVAb1+y1MoirA2O4IYaOPa
      tXPoS6WvlTRT31CFKIi0nX2Pw7V2Prn3JYr2+694KmoJZPI1sW/tsaPLXsWRFh9maWt9b7PZ
      sbusDPd3k1gzYXZUozcJWGU9BtUKogAorEwPM7USwVNVqy1/9gCaH2AX0PwAO0f/5DK/eTi9
      7XgATQC7gCaAnSOTyWA0GjVHmMbeJJvLky+p2z4KUVkCkIusb4QpKyoGi+OlothyqSSS1YHh
      azOpUi5QkCXMxq2vSZULpHIqDptpp3uusU3GVtL8l5/f2nb5irICkV7l0+4xEokEmdxzosG+
      RbmYR/7WYjCfWGBi4XeJbFVFfm6Mqsa7RWXNAIA7WM+hQy0ATA534W44jqcww6OYjzp1jsVI
      Eb2jGnNylvWiSjZd4vTlqyQmZvGf97LU28H0Zhpf7QEO+mWmBjvZmC7jbjrO8WqZuRUdhsIm
      nUOToJZx1R3jaL2Zhw87KagqBnsTx+sF7vfNYnD4uHz2BEZ9ZY0zlUTFCWBpvIdbsVkCjYeQ
      chnKigrlPJm8TCYbwVh1kmONHgbvL3Hq4jkKc5Mkchny6TRlFOKxFJ7qZtqaQgjZORrajnOq
      zURHxzJK0EAmpyKXFKr3t3OwIUjHww42EAm1X6YlkOPu7SXyqQJYfBw9fAC9TrOlvs1U3NBU
      e+AkN2/e5Nj+GmArIi2f31oO6S02Qn4voiCAKKHTSQiC+LXMETqOXrzG/oCRe58/QFYfO9JE
      AfEb+SUEdDrdVlkBEEBAQCmXUVTwNh7nvZPNjDz8kvXMyy3FNN4slTUDSEactt/Fk1UF/HQ/
      vIfNUMbZ2IIJO4bHb1vt9q0oNpMZk16H6nShV2UWJgaY30jgCzag05uwmHSAhM1uRpB0OG06
      dEYZs7hldbDb7fhrq3jw4AsWTSp5JUByc4G+0XlUixuHQTto9zaj+QF2gGxslaGJRdRyGsl7
      kNNtoWd+XvMD7Byj85v8jy8ntl1eE8AOoMhl0qkUMhIOpx3pOWcoNAHsHPF4HKvVqvkBdhNR
      0uFwuXe7G0/4KseOIAi4XK4ngeaFQuHJ/WROpxODwUA+n0cQBIzGrex4+Xwe2EqT+XUSmfwz
      2ywVS+hL24vKehXKqvD60qK8a6RiGyQyW4mFRMlAoCqA7mvb/GI+g6C3on+8DygVssiCEZOh
      cnL5qKrKnTt3mJubIx6Pc/PmTU6cOAHAP/7jPxIOh3E6nVy/fp1sNstf//Vfc+7cOX70ox8x
      NzfHX/3VX9He3s4f/uEffqPef/+//3o3Hue5fJUacbtUlBWomM+R2pzm04djpDNZvj0eLU8N
      EMn97vXm3DDTG5k32sc3wbVr1/jzP/9z3n//fTY3N5/8fW1tjVAoxNGjRwkGgzidTn72s589
      ed9ms/HTn/502+dqdgNZll9fasR3DW+oAa9TYDlXpLWlkXRsmftdIxTKMocvvY9cyNB9/x5q
      McuZ9z58Ui6yNMXA+BxlwcT5i6cZ77pPNFumvu0kbfXvRpKrVCrFL37xC44dO8bx48f5+OOP
      iUaj3xjJf//3f59oNEpnZyfJZJJLly4Ri8WevO/z+d65K1wV5dWWXRUlgG9jNFqxWvQUImHG
      pzdpNlg4ceE8AXGBLwbmafUAKAz1dZPTuymmFpmcryWRLFBz4DCNQdduP8ILY7FY+OEPf4jd
      bufOnTtYLBa+973vPcmarKoqbrebUCiEXq9naGhol3u8M3wV8LRdKloAs+ODePef4fD+Oe7P
      lEAPoiBQzOaRjJYnn5MsHi5ffB+rTkFRQW4IktyY596DXr7/3pldfIIXR5KkJxvejo4ODAYD
      3d3d3Lx5E0mScDgcPHjwgPn5eYrFIn/6p3/Kxx9/zIMHD4jH41gsW9/H559/Tjgcxmw284Mf
      /GCXn+r1U3lm0Pw6XZMlTh+pZXNhlN6xJexWCcl1kFrdCgMLMUTByIWrlyisjZMy1eMoLNE9
      Oo/OZOf40cMsTAwQTuQI7jtCe/POmyvfRTPov/1PP38t9b4qRxtd/G9/8oGWGe5d4l0UwH/+
      b18+831FUbYdlfUqVLsM/NGN4zsjgGw2q90R9gZIpVLY7S8eq/CilMvlXbPg7FbbiqIgCNv3
      BXyjx2azGbPZ/LTPauwQqqoSCAR2vN696AnOpxPo1CKStEN3hH2dciHLxmYEndmB3+NEEFTS
      8QiJgkC130lkcwPJ6kGU8zidb4vFpMzGWgxv0P9CadZz2TQ6o5ViKonR5XxjVoFXsVw8q87X
      Ue/b3LZu5QH5j//jtss/VTZqKcOXn3/JZjzJzEgnQ7MbIKd41DFIOlcksTHL0PgypbJMsVh6
      WjVvnFJ0hju3PmE+/mKRW1PDXUQzZUql4nccZxqVz1MHvOT6AsZQK0cPN6Dka/mkYxRbOsfY
      /BKqw81adIjVrJNQeh+xpUl8bie9j74gnJbZd/QcYnSC6ZUoBnuIC2eO8KaCoiYnN7nyvfMs
      Ts/SfGo/Aw9vE86IFMoqF967znz3bcIFiUJR4MoH15+Um52aps3vYXqwh+nVGKItwLXTB/j8
      0zsgGinqXLx/+RRj3Z+xGi9R13YCR3GFsbk1BJOXi6dbefTlA/KKyIHj52nw297MA2u8Ek/9
      WebzJawWEwIg6gzoVIXa1kMcOHSS9y8c59CxU5w5/x4Haj1kMhky8SXK1iZu3vyApoBET+cw
      igKLs2NEUm8oKEQtsJEp47Z6yCdWKamg6Mycu3KdC8dqmJ5eR9BbOXflfS63+xibjT4pmstk
      UVQRh9OJThSYm5ykIMuY3SHeu34Dv02hkFklVq7i5s0bHKi10Ns5iKxAZGWSpfUoybxK84F2
      Qm5tH/Wu8NQZwOVxMji6Slu9n3xsHVlv4VmGJkHUoZQLqKqKoig4Ao1cv3EVpVxE0r2ZzVF2
      fY5oJkdXVze5dJTFSP7x2hSK+QJ6ox6yW6/z+QIG4zcfXy2kGF6IcOm9a+jufEKJrZOeoig8
      iSJT5TKKqqIqCiZ3NVc/uIagFAGRmqoAm/NjPOiL897ptjfyzBqvxlMFYPTUsc8V5tO7d0Bn
      4sTZ8yCmcDm2PIZ6owXT40vC3G4XFmcIh9DJnbsLtB49S0udiTu3b2N1V3H6eDuS+Po3SJFU
      mUtX36PKaSYTXWYxHqOQ2OSzT25jsno5f95L/+w6n929jdnm4+J5J0s5F3qdgMPlQtKbcOoK
      fPHFA4qqDp0oYbdt3flltdnRG/1UO+e4e+cTGg+d4NA+F5/cuY3Z4eH4wWZGhwZI5co0HT71
      2p9VY2eoeEdYf/cDWo9ewPx4+hrsfMC+Exew7OIhkHfREfa2tp2de4Q6+HMtNeLTKBWL6PSG
      J4luS8Uikt7AG5iQnoomgJ1DuyPsOei/9U/59muNd5tCNoVUlBG1kMivKLOxGsUbCmz/vmGN
      dwZbpIf8x/+R4jbLP3XhJBfSdN3/lN/eusWD/qmXrriUjzM4NAXFFFML62/srpVSZIa7dz79
      VxxhMpP9vaTeHp+dxlvAU2eA2MoMiquJmxdqyeYKFDIJUkUJn9vG8vISAY+LxcV51iIZ2o4e
      x6Erszg/y1okTcvhYzh1JeKJNBDCZDKCqrI4OchySuDokUPoi3G6+kdxhpppa67esdjMyalN
      Ln947okjbGyok3g0hdHupv/RQ9yrcc5duEDQqSW41XjGDOAONZJbGuDjW5+TKQvk4uvMr205
      jsbGRsmnIyxHSxw51Mijh52UcgkW1rO0H2qmp7Pzd9cL5WOMzq+TXRllqeiiwSPQNThNb08/
      DW3tBKx65J16GrXARrqEy+Imn1ihqEJ8fY3q9vMcP36UYwfbuPL+de3Hr/GEp84AotHO1Zv/
      C+VcjH/5l084dXbftz4h4fF5sTv9mPRjgIjb68Pu9GE18Z1A5c2lBVbiZkpmAXdoH00N++kf
      G0IVzZzy+Z9kangVsutzxHIFenp6yaejLEXymF0+/HYLgiCDqqAoCuorptLQqByeKoB0bIXJ
      2TAWqx6DzYbZaCK+Ps9wOUI4owAKG8sLqJk1RIsfUAivLjBcjiLr3YjfsjNWNTVh7I8QCLjQ
      mw0kUhE8Xh+x9VVyJTDvgAAiKZmLV64+doStsBiPYbM7Hps8RYI1Pro/vcexCxcJOrRZQOMZ
      fgBFLhHZ3CRXlPFWhbDoBSKb6xQxYjHrkQoJBqfXqaurpSoYQE5t0D00T0NjPYFgFXpRJpst
      YTPrSOYV7BYjyegGiWwZbyCAXsmzvhnD7PTidVrZS+Ox5gfYOeSVfop9f7ft8tt2hBXSCWJ5
      laBvKw6glEsRTpYIVXm23Zm9giaAneOrgP7ttr1tP4DR5iT4tRO/erOdkHYIUuMNY9SBmIug
      FLe3hq4sR5hcYHllnZKiYrF78HvspJJxrDbnUw/jFfJZRJ0Jva6ikuTtGXTLD8i9joiwd5L0
      Gn3TqxQLeSb67rMYLTw3dd7SwhTRpHaJxV6lsmYAwBOso6XZS3p9ERWVuZlJDhw5Q/cX/0Je
      0ZHMC1y9fpXkTB9Di1FS2SxX3tvP9FAHs6sJDI5qLhyroqd/gVQqweEjhxju6UXRWTh1+RJe
      c8V9ZXuaypoBgJmhR9y5+ykJrDjNevK5LIqqIhucXH7vOu2NPrK5NPPhMt/78CanDjchylF6
      emdRVFibHyGcLLISyfPe9WvYxBxljLQdOYzTqJ0uqjQqbjhrbj/L+QMhVqd7WVyNP/m7IIpI
      ovjYAaailGUUVaVYKKIi4Khq5IMb55BLBSQ5TrC6Fr0kIrpquHrVz/zAfQaL5zlR79i9h9PY
      cSpLADoTkZkebi8OIRrtnDnrYinrRhIEHI6tH67JYsWgM9MQNHD37j0ko5FAg5f91YvcuXMb
      myfIyYM1OGxbm+ZiNkZ3zxAFxcgxj2bmqjQqPiDmbUTzA+wc2blO1OH/d9sRYZU1A2jsPQKH
      Mdb+H1pEmMbeRJCLkImjaDMAUC6wtLJGSVbQ6a1U175MVJhKJpHC6HRU2JdS2ehWNEfY78is
      0T+zTrlcpizLLxmFpjL2qIv0a+qaxttJxQ12nmAt+/dXA1CMLfJxxwhGCSRXHQf9kNKHaKmx
      8vDhIG0NTrqH5yjKOi5eu/S4Bpnx7gfMhrNIZg/XL7Tx+b37IEBO5+b7V08wMdDN0kYCg7eO
      cwe83Pu0E9Fg58TFc/isxt17eI2XprJmALYcYbdu3eKLzhHKSplAczvv37iJQUnh9XlZW1kl
      vTiC4K1nuHeQvKIgJxcZW9q6F0FObbIqu/nww5sccmeY3ChgdNVw7YObHLSkmFqPMTw+jQJM
      j4yQLWYpYaa1/RBO0/YyE2jsHhU3AzS3n+VC29YMUIjMIooSAiAIoLP5sJYn6ZhQOH/1MCNL
      Ds6eu4pHL1NGz9AMCKKEWi4iKyqFYhmdTgQBUBUyBXDowVPTwpWLpykVihh1Atev+5gfeMRI
      8RjHGry7+vwaL0dlCeCxI+zW4jBGa4BT7QHsZgMg4HQ4AYn6Gh/xlRJmnY7WQ810fvkJot7M
      0dPnsXs8GKxemt2L3LtzB4u3lvMeicmHU9yJLeMItXDY46Zgn+Hu7TtYfHWcbfHQ1T1ISTVw
      1G3d7W9A4yXRHGHPo5TkQf8SF04f2rEqNUfYzpGd70Qd/oWWGvG1oSqUygp6/c5NlpoAdg4t
      NeLrRhDRv6nbPTRemkImgZQrfSM1omD1I0gv9tOuLAGUCywur1KSFUx2D9X+t+XeMo3XhS3a
      953UiJb/8D8R3Y3E43GmpqaoqqqiqqqKvr4+VFVFFEXa29sxGAwVZgbNrNExuoCiKCjPWdmV
      Cwn6BybfUMc03jSyLPOb3/yGdDrNP/zDPxCJRJBlmXK5zG9+8xtisRi/+tWvKmwGAJy+alpa
      WgCILk3QNTJHuSxw8cb7rA88YCaSxVuzH0dhhofdi6TyeU4eDNLVNUi2WKL16AWKq30sREuU
      c1nar3yIMT7F4NQqJdXE9WunGOwdpJBJ0HD0NNMdX1LUm2k9eobGKi1W4G1BkiR++tOfAjA5
      OYler+fixYtsbm6ysLCA1+tleHi48gSwNN7DrdgsgcaD+CSVM5evI612MrVRIOCr53SdylK4
      TNPBY2zmPVw+e4TJ3i7azlzCa1BYjaTISyZOX7iAMTfL5HqYYrTA1Q8+QI4ukcrJxBMpzl2+
      ht1YoNR2CrEURpF3LMGjxg7R29tLOp3m8uXL+Hw+yuUyn332GVeuXAEgkUhU2BIIqD1wkps3
      b3Jsf4jw6hqbm2tMTC9QLJZRlBL5kkgsvAaCnlwqzNpmFJdDx8DQGKvr66iCDkEQEIWt6DFB
      NKArRRmbnGcjkUEnithcARxmPYKsUCzlEASV9Uj0+Z3TeGNkMhn+6Z/+Ca93yzFZKpWYm5tD
      kiTq6uowmUw0Nzcj/eVf/uVf7m5XdxDJiNNhx2LSAyIut4N4JEGwuY0qrxOLrkw4kqSptQ27
      1YbLpiOZUwg1tmAnRyJTxl9VhcvpwGw2odebsFqt1NVXk01EKOscBH0uHHbrVsZrUUcpEyct
      GznQ0oj+BW8rT6fT2Gw7f42qLMtI0u7ELe9W20pkivLkrW/8TX/8ZwimLQNIIpEgnU5TW1uL
      IAgcOHDgibn22LFjmh9gN9D8ADtHPhlGyoW/4QgT3Y0IL3gzacXtATT2ForOgs7bgqQ5wjT2
      Imp4jOLEx5RfcPn5bSpLANlN+lfLHNsX+s5bSjHLzEqElsa6f7Wokl1jZFmkfX/gdfdSYwcx
      5NbJD/5825esVJYASlk2Yl9dAqYS31hibjmMv66FoFVhbXmeXCJKoL6FgMtCYmOJ+fUkTftb
      sZYzbMYkyoUMUxOTqFY/B5qqt26I16hYKs4M+jsU8gWorqlheLAPFcgXSgSCfno7OsjmIkzM
      Rwn5rPT1DlB+bApYnhoib/Rgk1S+fc2eRuVRWTPA11DLReZnx0jkYWEhQu78UZzeAFVV1dTa
      ZoluLjA4MU8iYcPoCvJVALG/pp6F/jFiWPHV1qDdtVrZVNwMkEmEWVpaJh5PkBcttB3Yh82k
      Q0Ugn4qxMDfJUgF83jpqPA5a2w5QG/A8uUm+kC9S07gPu5wiVlR292E0XjuVJQBrgPY6F8lk
      kqJk48j+evIlkWs3r2ExWmlpqCaTV7lw4Qxmq49L5w6RTWexO13orCGOHajC5vSgFLL42o4R
      MlXW16PxXTRH2C6gOcJ2jlxiE10hqqVG1NibFFQ9kqsJ6U3fEaah8TZgL6xQ6vkl+W2WrywB
      ZDb5zaedGPQGXIE6jh85gBbNWNko8XlK/T/fdvnKEkA5iyHQyo1TTYx3fcZSrB5DYoH1RIF9
      bYcwk2d9fZVwPE/LwUPYDbC2MMN6SuVAWwvkYuRkkVg8R2NjdYVZCDT+NSrzf6yqZHIljKJM
      WW+jvtpLX28f2cgqc+sZaqpsPHjYQ3JzgbWUSJW9TNfADNH5Ae51TWBxOPbUxd17mcqaAdiK
      CLsdX6D50Gm8UoYvRgeQkVjPqByr9xIIBQmEqjBOLRJbmWFkpsCmXY+rej+iZOToidMEPZr3
      a69QcQKoPXCSm6e3YoITy1OYPdWEnHqiI4uAQnRjjensOoLJhzMg4Y/HaW2qQtVZIS0g7lJA
      icbuUFkCsAY42fo7t4Yj1EhDaZ6CZOPGlSBkY5SKeWRdiPMn69GLKieEJcLJAtV1Loyugzh3
      x4yusUvsKUdYNhYmqegJep272g/NEbZzxDeWMSspdPrtZeaurBngOVjcPiy73QmNHcVgcyMZ
      qrSIMI09SniM4vj/pKwdhQC5mKavu4douoivrpUT+6uIZWXcdm3cr1T0uXXyQ/+gRYQBhGfH
      Ubz7uXEuQCqTZXWih/+vf4Oj7Yc5daiJpZlxogU9bQf2IeSipBUDsXCCmmoHU+PTCBYfbfvr
      oZRhYnyCkmSiqWk/ZjHPxPgkRm8d+2p8u/2YGjtIRTnCPLUNxKc6ufXZI1S9GZfXj7eqmn31
      QSLzAyykjPgtOTp6pkguj3L34TBml4tiLo83VIehsMTUSoLBRx1IrhCm7CKzkTyTI6PYq+pI
      z/SxmNZiBCqJihKAzuLlxg9+j8vHG/nst/cQzRYsVhtuh5XIWoymA81UNx5AyIVRRYnDJ89S
      7bUTXZunv6+X0ckFYokwJdFHc20Qt92KKueYmphmuL+XjQLoFC0FYiVRUUugZHiJxY0cNouA
      yWJC0BuQE5vMrfjw1/gZHBgkbc8jOoKIwjqSuOX0iqeyNLW0klgcRsGEXllkfHqG9MIapoPH
      qK32IfibcEgFTNs0t2m8nVSUAOzuAK7MEtkSnL98HoNJ4tzRZsK5Eu76QxyUFkkWPZxtq4aC
      F/Pj3/KhIyeYX1qnsf08JrMNNSCyHkkg6owYDAZaz11kcXEJRe/GYdrdZ9TYWfaUI+xFWZ8b
      YWhqGYunltPHD+74kWrNEbZz5JMRpGJMiwjbSaoaD1HVuHOX4mm8PhSdGZ3FqTnCNN5+VFVl
      fHyc3/72txgMBn784x+jqiq//OUvsdls/PjHPyafz/OLX/wCo9HIRx99hN1uBw7d16sAABEW
      SURBVEBJrVHs+L+/U2fGVIv+3L/fdp8qagkkF9L09Ww5wrx1rZxsq3+p8oVMhNmVLG11DqY2
      i+yr87+WuIC9ugRSVZW1tTVcLhfz8/N0d3cTj8f5oz/6I4aHh0mlUiwuLvLRRx8xMzPD0tIS
      H330EYIgIG+Okf1/fv87dearL+H+6P/a9i2RFWUGDc+No3r3c+OD67TUeCik48TSOVRVZX19
      jWI2zcLMON09/STzMqV8lsXZCXp6+olnS8ilPLFECkQJm9UMqsLS9Ah9w5MUygrFdISeri5m
      lsJUzKjxBhEEAbfbzccff8w///M/c/78ecrlMjqdjoaGBhYXFymVSuh0Ompra1ldXeV547Mo
      vtrx9YpaAnlrGxi4d5/fLvs4f+Es6dUxlhQfriYjwyPDnNxfz3w4z8EGFw8fdnPhUBUzK0kO
      t1TR0dHNlROPE+dmNxmcVbHkimzKDqpMUfrGllAjkzQcPgHFEjIV9uW9RjKZDH//939PQ0MD
      H3zwARcuXMBkMjEyMsIf/MEf8Hd/93cIgoAkSfzkJz/h5z/fivEVBAHhNedmragZQLJ4ufFv
      fo+rJ5v57Lf3KHznEzoCwSp8VfUYpTwg4asK4quqxaQrfufTa3NTTE6MMDyzjskg0dbayNjQ
      ALPLGyiaQ/iFsVqt/Nmf/Rk3b96ku7ubQqGA3+9nY2ODQqHAD3/4QxwOB5cuXSKXy/GDH/wA
      n8/HhQsXniuAYrGI8gr/jIoaxJLhJRbWs48dYWaMRiOx+WWmiutEswAK4bUVxPQagtnPVxFi
      U+UIqtHznfoC9fU4y2Va6h2IJjPpfIbGxgbWFhfIlsBgfNNP+O4TCoV4+PAhFouFn/3sZyST
      ST799FPa29s5fPgwkUiEu3fv0tzczIkTJ55bn06v27YJFCpsE6yUC6wuL5MtQbC2HptBZWVx
      kZJkw27VI2WiDC1GCFYFqW+ooxBZpHd8mVBNDfX1tegokc6WcVpEojlw24yEV5eIZ2VCtbXo
      SimWViPY/SECbtu2N8h7dRP8KjxtE1ysvYrz3/3XbW+CK0oAzyMbC5NUDQQ9W/f55lMxojmo
      DrjfaD80Abw8armImlr5zt+zJTB5andGANlslmQyuf1earwQqVTqiX17J9mLt0Tm83kMBsO2
      l0F7agZ4W9BmgJ2jMD1N+s4n2y7/1HljaaKX0dllYikZv7+KM5fOY3vKp3NrY2ya26h/wVjz
      6MIkaVs19R7rdvr8bEoxPv6nDi7/3vdxvIEt/tzUNLUt+yrLmvAOUV7fIHP37rbLP/WibIc3
      xL4aK6tpOx9cOY6eMvOTI8yupfD73KilPOPDg0RzYC6sMRMT2FicxeL0oCvGWdmMMTk5g8nh
      xqwXmBsfYm4tgcfrIbU6Q1LnxmsWmBgaYD1VwutyIMgFxoYGWFqNYXbaSERiWK1Witkk6byC
      yfj8o8ibk4PkLUYSeSshj5lyPsnQwCAZ1YTDBBMjg2xmVLxOK8szo0yvxPB43CjZKH39w2QV
      A267gemRQebW4nh8XpR8guHBIdKKEY/DSHQzTjq+QqJsQiepOG02UuFlhkamMNg9mCSFqdEB
      FjfTeLxuJPGb22Xtouydo7S4RK7j0bbLv/DCKbw4Tkb0UGWK0z28wmj3I0RPDU6LDlVRiSaz
      1PmMDE8tUghP0zuXpL7KxvDELEsjPYRxEjAX6eifeFLnRM9DZFc1xvQyA3MbDDz6Asldi1VO
      sLSeYm50iLSisjIzTLz0IjYXlelIniMHD5PZmEJVy3Q/7MJd04hFJzPR24XqrMZl1ZNaGWej
      7CBoKdA7ukBPdx/VzfuwSQqRxXE2FTv1QQeFfI7ezj5cNY2kpjqZiecZ7PiCqc0SLpuRoeFh
      5GycsYUwjU219HZ2ElubZLPooNplpag5DN5qXlgAa/OTjI0NMTwTxWZW2Czpaa2pIhjwI0kC
      jftaCXg9iI9Hu4Z9+/F7Peh0IkuJHAcaawjVNVDOp5/UuZxRaKsLsm9fHYlYiqxoobUugMNh
      RUDgxJFqhkcW2cgYqPU+/yC+kttgenKBL7+4z/zUDNFskoLkpTrgI+izE8vpaa4LEqrys7Ew
      w9TUKEPTa5iNeg4eaGJ8cIDppXVsVQ1IyWWGRqfIpJOk9U7qAj4OtdWyuprA6q7h5LE2LIat
      ES+bjjI9PkpPTz+SwYLFX4cus8TwxDS5giaAt5kXXrr6axoIS9AYtKGz2dBZVXpHJ3BZrXie
      8z9u8jvoHxrFq89jdniByNbf3Ua6hsYxpNfx1x5GWV5gYHyazMIKlv0hDL5W8l2/xN144YU6
      uja/xIkbP+RQrZvNuQGWVgvYxRhjk9NYLFYCDpWh4XGcNiv+unocxQL76l1IZjOpXIb6hnrW
      lxaJxKtwBaqx5zYJp8CtJBmenCK1uEzD2WbW4+t83UFpsbvxeX007GumWBYhm8EWqMUcXSSa
      LuK3aenm3laeugcAQDTidjkwm/RYXQGsuhL5skiwKkAgFELJpdFZHLh9VdjNRgwGPU67FYvd
      g91iwqDX47Tb8AZrMKp5FJObg/vqMFsd2G0W/KFqhHwKk6+W5mrv1no/nyefy2DzVONzmomt
      rlPbfgSL7vlLINFoxe92IIkCJqsTq9lIfUMtuVQSs8NNbUMdFDLozHb8oXrcJoVcSSAQ8GEz
      60mmMlQ1tlLltlLIphHMfvY1hqgK+smn0/gb26h2WbA7HZiMBgTA43ZjsbsI+l2kU1ncvgB2
      u5VSNoXeVUNT0P2du4a1PcDO8ap7gLfKDBpdnqR3dA6Lu4YTx9qIzg2zobg51lpbUenKNTPo
      zhFbW8NYKqHXbS9W+60SwF5BE8DOkc1mMRgM2/YEa+ZrjXea8twcmU8/02KCt1BZnhpibG4N
      k6OaM2cP86wxqZiNsRaXqa/Wsr29q0jxBLlPP9t2+YoSQDG2wMhqmfeufwClIpKqsDwzzkqi
      TPvRdoRiktXFFcLpEoePtqMX9VjMOlBlZseGSCpWDh1sIZuIgFJkIyMRtBQZm1kl2HSAWr92
      dVKlUVEBMeHVMDXNjRgkEYPJRGxhnIWkQHO1nc/vd5MML7KWEmmutnK/Y4B8cpOZhXWWp0co
      mgN49Fn6x+dZHO/m4fAyVR4LfYNTNLTsQ6+UtTDICqSiBGAy68hk8ny1rY8kEtTU1eOpqkev
      ZkE0EAj48YaaMai/O/W6vDDL5Ngg4wsbWMxmBJOTs6eP47BZ2d/gZ3RwgIX1KJq5oPKoqCWQ
      u3Yf6Xv3GROy6BQRt8/H6PgwBY8BTB5Qy2wsL1KMTWJw1T0pV1dTQyYuUe+1YrQYSCVFBARQ
      ZLKySF1tLYurYRSlBe0KscqiogQg6G1cuXKRxeU1DA4nvoCLI9IqsazMpdY64qtjgIrJXc/+
      2iBCucBBq4rd0oy0skiqKOBx2fFY2zAYRRAg4POyHk1z9PgJdNqPv+LYU36AVHyDgmLF9zqO
      Yb8Emh9g58jF44jZHKKkmUGfi90VYOfjsDR2E9VgQLLZNEeYxt6kPDtH5tNPNUcYAJkNfvnJ
      IN///nUsOpHNxWE6R5PcvHHh6RmeSwlGF7Ic3Bfaei3nmZ0PU99ci7bkf/uREglyn32+7fIV
      ZQalnMOqKzCxkgZVZm01jCoXUVSVxclBOh71EEkXAJXVmRG6eofJFgpENtYZ6OlkeiUKgoDZ
      akagzNrSAgPdncysRFGB6MoMj7r6iGdLKMUMgz2d9I/OIu+ZXVTlUVkCABwNbaQXJyjnEmR0
      DpxGASgjGFy0NHoZ6h8nsTjEWFxPU30VqiwTi0QJNuxjaWyIYjnL6Ng8KgW6HvYTbGxmfXKY
      dGKJkZUSzXUe+roGmBkbRnDVUO0yUtBuTXpnqawlEIBgwinkmF9fw+2vYTM+hlpIMDQ4hMEi
      EI7oWVQNtJ65gNeog0IYX00DAa+LFbOJr8f2+GsaCHi9hK06EmvLzM1HKCZNWJwhQk1++vtG
      iagix9xBLLqKG0v2BBX5X2ve56Ozc4nq0OM0FbkEiiNIbSiAThKo2x9ktLOfyekZktnv5gT9
      17AH63GazTQ01ON128llsnirQjh1eaJZbQp4V6ksP0C5QLIoYDcJhKMp/D4XyXgKm9PO5vIC
      JcmM1WTG6baT2lwlmlOpCfnJFxQcNiOZZBqzzUwqlcfhNJNO5rE7rGTTSYxWB7nEBuuRDO5A
      EIdRZXVlDcHsoqbK81KH5DQ/wM6Ruf+AyH/9P7ddvrIE8I6gCWDnyMbjSLk8kuYI09iLFAGL
      14Num+LTBKDxTmMOh0ndur3t8pUlgMwG/+PuI8wmEzZPNafaqpgOyxxsCOx2zzReE+WNTTKv
      EBFWWVagcg5zqI0bN97HJ2yyHE6xublGb2cHc+sJQGVjYZKHj3pI5MuUC3lWl+fo6exgKZwG
      VWF1bozO7kEyRZlyLkF3x0NGppc1Z1eFUlkCABRFplwqEk8VMBklopE49fsPMDXST3pjntGV
      DG0t1Xz5+QNK2Tj9ozM07t/P+FAfmegCS3GJhqCRrt5xpnt7sDW24rXpkLUEbxVJZS2BgNXp
      Ib7IrtN08CwhS5aquka8TidWi4lkMkEgVIfL48WjGyePSKiuHo/Lg9UskVybZ2I2RzpmxFHV
      SF3oAD2Dw6zrzZx2+zFs09Kg8fZScQKo2X+M66dbtl6kst94z+31Mz4whpRzkpSsfDvbqCPY
      gHdlgdraIKLRTCqVxh8Ksrm+Rq4oYzFoAqg0KksA1iBn2r62WLf4aG/cet1+6BBmu5XTR3SE
      k3muXDiEUZBpMW1dl3T4UDsWm5ULJ0xEUwW8fg9mrOTXwuw/eAyPdXuZxzTebjRH2C6gOcJ2
      jtj6OiZZRq/f3gD1jRlAuyPszZBKpV5LvYqivNKVoe9i24qikBcEBHl757G+IQCLxYLFYtmR
      jmk8m9cxA5RKpW2PhO9q2+VyGVEUty0+bVdXQTzvVvVKbFsQhFdqu7I2wXuc7QaGv8ttv+qd
      BNoMoLGn0QRQEaikE3GKsoIilygWywBksxmU12jkU1WFTCpOOBylWFZQlPKTtnPZ7GtrW5GL
      RCNhMvmtYKZ8Po+qqijlErn8iwU4fYUmgAogF1vh4//+35mO5smkVpicDlNIrvJl58hrTeib
      DS/SPTDG/Ow4X3QOk0uvMD65STG1zpedQyivpXGV4Y7PGJuZ5cGXD0kWZPoG+lBVlemhTuY2
      X87CpgngHUeVC4yMz3PoYMuTf6YqF+jrn+D4yaNIr3FzavHUcvnieY4ebkUt57b+KBfp6x/j
      yImj6MTX0XaaSMHFxTNnaKtzsh7eMtunw7OsFV201npfqjZNAO8kZYY7v+CzrhHWZsewVLfh
      Mj82QSolRjo/Y0N24rEZX0vbI11f8mnnMIIkEl+Z4N7DUU6ePA5KmdGuz1gr2fHZn3+t7fYo
      otNtpbY06U1by674KrfuPKJ6/z6kl9ScJoB3EomDpy5y6UQrqXRu6z6D/mF67neRE/UcPn+D
      NleakblNdt7RL9F28gKXTx0kE1lgaLHAtWuXcFkNIOo4eO4DDntyDM+uv4a2AWyUipvIikI8
      FcdgMGNwhfjRv/s3LHTdJ1V8uWO7mgDeSQREUUSSdLQeP8+HN29y5fwZLlw9i1XSYzLq2X/0
      LPnlKTI7nrDicduiSGRlns3NZe7duc2D/glEUY/JpGffkTMUV2dIl1+HAIwcqLPz21u3WM6a
      qfHbsFis6IwOTh1pZHJ68aX2PdpZoF3gdZ0F0nh5tBlAY0+jCUBjT6MJQGNPowlAY0+jCUBj
      T6MJQGNPowlAY0+jCUBjT6MJQGNPowlAY0+jCUBjT6MJQGNPowlAY0+jCUBjT6MJQGNP8/8D
      ASsFGzb3v6gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales/ City' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9eYxkWXbe97tvf7GvuVdmrV1dvfdMz8oZkRyRNElRNihLsGVZsGEBhgTL
      8Ab/IcOQKcEGbNiwZFiyIUiiZFKQTZm2RYKUSIkacjgzPT3T03tXdXXtlXtmRMYe8fZ3/ceL
      jMqojMzKrMrqHnbV12h0I5aXN967595zz/nOd4SUUvIUT/GEQvm0B/AUT/Fp4qkBPMUTjacG
      8BRPNJ4awFM80XhqAE/xROOpATzFE42nBvAUTzSeGsBTPNF4agBP8UTjqQE8xRMN7dMewI8K
      pJTs5YQIQAjxaQ3nKT4hPNEGEMUxq70et1ttNvp9er5PEMeYqkrBMpnPZDhfKFK2rafG8BmF
      eBLJcFJKNvsDvrO2xvZgcOhnFSE4V8jz1bk5MobxCY3wKT4pPHEGEEvJ+7Uar6+tc5wfntI0
      fub0aeazmcc2tqf45PFEGYCUkne2a3xvff2hvq8rCr9w7ixzmadG8FnBExUFWu31+MHGxkN/
      P4hjfu/uMk4QnuConuLTxBNjAFEc853VNaJH3PC6vs8PtzZ5gjbOzzSeGAO40+nQcN0TudZH
      Ow2c8Oku8FnAE2MAV3caJ3atII651W6f2PWe4tPDE2EAYRxTd5wTveZmv3+i13uKTwdPhAF4
      YYR7wi5Ly/VO9HpP8engiTCAGEl8wofWII5P9HpP8engiTAAgUA5YSqDrjwRt+4zjyfiKVqa
      iq2fLO2paFkner2n+HTwRBiApihMpVInes3p9Mle7yk+HTwxbNCLpRI3WycTutQVhXOFwolc
      62HhhAE3OzvU3T6xlBRNm7PZEjnjKXP1OHhiDGApl6Nq29ROIBz6XLmMpaonMKqHQzfweHN7
      BTe6F9naGHTZdnq8Wplnyn7KVToqnggXCBJa89cW5lEfcXUsWhavzUx/aquslJLLjc2xyb+L
      SEo+bGwSxNGnMLI/mnhiDABgLpPhawvzPOzUNVSFV6bKrPZbXG/V2Rp0J062QehzvV3jg50N
      7nQbJzohvSik4R28i7lRSPOQ959iHE+MC7SL58tlFCH49soq4TFyA7auUE0b3OrWx+oIsrrJ
      C+VpBFBze1SsDO/vbNyb9ANY73f4wtQpNKEwCAMGoY+t6aS1pMAmkhJF7A/VSinZHHRZ77eJ
      pWQqlSVvPDj65E3YHZ5iMp6IeoBIxjRch5ozwAlDFCEIo5hbrQ47jntoYYymKJzKppFKQHzA
      J3VFpWSZDEIfgTLRPTmTLaEpCre6O8RSoiA4nS1RsVJcaW5SMFM8W5gmkjEKAlVRuNtt8nFr
      e+w603aW9UHn0DF/aWqRsvU0SnUUfOYNoOb0ebe2xY673y1QhSCjm9iqwY7j0vV9ojjGUFWK
      lslsJsP5QoGrrS22ncO5P3nD4oXSNO/urE90eWxVw5fRWEZaQVC2UjS8PrpQKFsZ6m4fTShc
      yFf5uFXDiYKx6wggb6aou5PHk9NNvjKzhCqeKO/2ofGZdYGklNzqtHhre+NAGkQkJW3fRRiS
      nz1zGlu7dzt2VSH6gT/ReO5Hx3dRhYImFAL2G0Ao433jiJHYmk5B2gBsDDoABERcaW5OrF2Q
      wPlcmUjG+3x9W9N5pTL3dPIfA5/ZO7Xt9A+d/HvR8j2+t7GauCZDX3w3yuNEAbF8MO9HkhxA
      59P5fe8JYDFTnHj49uOIGDlx0lqqvu81Q1HJmxZfrJ7ipdIsc6kcVStNStPJaAYrvRYd331a
      sHNEfCYNIJIx72xvHosAV3cH3O609r1+nNVUCFAVqFpptOH3NKFwMT/FQrpA1RqPz6c0nW2n
      S9t3qXv9sRDtTCrHi+VZTOXerqQKheeK06MzwkImzwulGWLkMDo0YLnX4vvby9QOcJGeYhyf
      SRdoa9Cn5R+frny91eBsvjA26dOagaVqOA+IrOiKwq1OjX4YICKDrquy0nFww4gfxF00RWCq
      KroG1bTJS9UKKUPlamtrdI3z+SoNb0BKMziXqyCA84UKN9p1FCF4oTRD0Rw/3K7327Tuc4Vi
      Kfm4tU3FSp84CfCzhs+kAWwPHm716/oebhiS1u/p/+iKwmK2wMet+qHfnU/nWe84fLjdpx90
      9r0fxOCEEXhQ6/vc2OnzTClPLq2AiElrBsu9JoPw3qHXVDWu7okCfdDY4ItTi5iKhh9HqEKh
      7U8u83TDEC8KsbX9btRT3MNn0gD2TqLjQAKD+wxACMHZXJle4LPW3z+xAUzF4HvLO2z2j56A
      8qOYD2tNjIbC1xenOZVO89Ge3WC119qXbXajkNVeGz8O2Xa66IqKrkx+hIoQhHHMzXYdLwop
      mimmU9mnO8J9+EwagHjoXC8oE76qCsHZXAmJpOW5ozCnrepoQuf15Xqyuj8E/Cjm9+9s8I0z
      s2OvCyGQE6L9O16fbpCs+mEUjw7u95938obFW7UV/OFYV/ttdtw+z5dmPjEahxtG3G52We8O
      qA88vChCVQRpXWMqbbOUzzCXtT9V8t5n0gByhvlQ31OFGGVnd5GEU3e402sQS4kmFC4Vq0zb
      Odqezz/68NpDT/5dxBK+fXeL1+YLCDVEIFjMFOgEHttOb/Q5gaBspkcGAGBpOhcL01xpbOLF
      EYoQLKTzuFE4mvy7WB90WMgUKJj2I433MDhByHdXtvn23S0+qrfwo4PSh8kuNZW2eG2uwk+d
      mWWpkPnEd6jPpAHMpjN8uLN9LOlDgLJloyqCQeCjqyqaotIPfe4OJz8k8fyVXouqleU3rt2h
      f0IiWV4Uc7U24M8+f47b3Rp3ug0sTadqpekGHpqispQpYqkaNdfACQN0RWXGzrHWbxPKGAHo
      QqFqZ7jWqk38O/3AfywG4IURv3tzjd/8eIXa4GjyM7GUbPYcfuvaCv/s+govTZX4cy+d5Zny
      /lDy48IfyUxwLGNavosbBuQMi7RmjG2jUkq+vb7Cer97rOvOZVL4cUgUxyiKYDaVo2Kl+KAx
      rianCoEMbL67unXAlR4ez0/lKaTvrZqn0klUahD6+HE0ivjYmsGLpVludnbGdgkAS9VIafpE
      UtwXpxYpmDZSSrw4ZHvQI5QxJTNF/iFqCaSU3Gh0+VtvfsSdVu/BX3gAdEXh5y7M8+++eA5T
      e/yU8z9yBhBLyUfNLdYHSXGLKhQuFaeZTeUACOKI250dOr7HnU6XMD7az7N1gaHuj/lndZNQ
      hmNF8Kai8/3l9iO7PpOgKYLPLWTQ1MTQsrqFH4VkdYtNZ9ygZ1M5Ngc9ogmJurPZEmv99pgb
      NGNneb40g6IIdtwB79XXCfd890y2xIV85chGIKXkn99Y45ffuX7iIgHnS1n+y6++yEzm8blr
      8EcwEdbxXTYG9yq7Ihlzq1MnGj6Au90Gy/0mrWDATNomfYQwYNW2J05+SIpPqlaWlKajCpGs
      krH5WCY/QBhLlMjiTLaMpqi0fYcY9nGCAHqBN/GgDICAC4UKZ3IlFtIF5tI5epHL2zsrdHyX
      K42tsckPcLvboOkfLZIlpeT//eguf/fta49FIeNGo8t//c23Wes83oTej7wBRDKm5TlsDbr0
      Ag83CvY98iCKaHh97nQb9EN/9HreNPnXls7xbLGMpY4fdxQBRdPi63OLnCsUDx2Dpqh8eeo0
      PzZzlteqi6y0D+8p8KhY6zpkdBMvCocUi2CiAUzZWTL6/gO/IgTr/RZXW1s4oU8nGNAJHAZh
      QNt3+ai1NfF6kJAHe4E3WlAOwm9dW+FX37954nIzY2MZuPy1b73LzuDxaTA9lkOwH0XsOB5O
      kLAfdUWhYBnkreM1mOj4Lu/vbNANkhsgSMJ794f9dFXlw+YmkYzRFYUpK0Mv9IilpOn3UZSI
      r80vEEYxfhzT8gc0vT7n82Xm01lWevspEHuhioR6oKIQxDHbx4j3PwzWu/19odzZVI4gikb+
      vqlpOJFPzkgMZbcGQBUK5/Nlml6fbuBhawaKEMMJn0z6hF4xeVJtOx3WB03mUnmeyU9NdIc+
      2GryK+/fPHaQ4WGw1Xf5G29c5r/58VfQD9ilHwUnYgBRLFnp9Hhjrcbl7SarnT5hPC5GpSkK
      OVPnfCnHqzNlPjdbJmMc7J54UchbtdUxbr0EWr6LqapkdQM/isgZFnnT4mYnydSGcUzRTNHw
      BgzCHjtun7KV5k53h37oJwdmIJQRNafHTCpHyUxNjKXvomSmkFIihMAJQgb3qcztrK6QKZZo
      b29SWlhE0w/+XZ3aNrnq1OH3U0pUNM5ky6z0mmT1oUskFM7lQlq+w5XWJoNBststpouAoOUP
      OJ0tUbUyFM0U11rbrPXaCASWppHRTHKGxblcGT/aoHWfu5O4eDZ1N6l0kwDD372Lrhfwv//w
      Kn70yQmDfbDd5LeurfCLl5ZO/NqPZABSSt5cr/M7N1f5uN4+dEUI4pgdx2Nnrcb312pYmsqP
      L83wJy6copLaX+W00e9MLCyBZId5tTJPRjfRhIIfR2w7XfqBT9FMYara6GC4G0/Zfdgt36Fo
      pCgYNr3A5/XN25iqRk43aU2gFcylclxpbTCfKiTVWFIlvM89GLSatLc2aW1uoqgq27dvkatO
      E0ch6WIJfzCgsbbC1NnzXP7mv+T5b/w0tdu30EwTM5Vi0Glz6vkXyZTKo2t2fW+0i3V8l5vt
      OhcKVRQhcKNgzFh3vD5eFBLKmOvtGpqi8uHOxlhG3IkCLFXjxVIJQ9E4ly/zUXNr9BlDUblU
      nCJv2IRxnMjAb69QtlKcyhQwVA0pJf/042XWuo/XBZyEX7t8m68vTU+cK4+ChzaArZ7Dr7x/
      nXc3Gw+1FbrDuPF3lrf4M8+d4afOzo0lQXbdnklIKAvBiBhmKCqn0kVudxtEUhLGMVU7S8Pt
      UzBtsrpFzb0XonMiHzcMR3z7QRggSFicMZJBkEwKTVGIpMQJomFcXuPZ/BxiOIYRhCBTKuP1
      e+ysrHDhyz/G7bd/CFKiWxaaYaBbFjKOmbt4CVXTqJ45S6e2TRQEnHvtS0T30TeWey08uWuQ
      kpV+Qo3YctpYqjG2Y2lCoT80eDcKuNbankgHSagULaSQrPXbKAKeyVcomCkyuoGU8G59jYZ3
      b4I3vAE1t8/nKvMMgpjfvrZyyFN9fHDCiN+4usxf+NwzJ3rdYztVUkre2qjzV//gbd55yMm/
      F/0g5B++d53/5fuX6fv3HppxBNmRtu8QxjE1t8+HzU36oU/DG/BhcxNNKGR0k1hK6m4PXVER
      iIRIFsX7ik0k0As9XirPcTpbwotCWp7Ler+DF0X0g5AwgjCO9o0tW65QmJll6ux5Fp5/gZs/
      eIPyqVNYmSzN9TVUXQcJhm1jptMIIWhtbmBYNoW5eVRNQ7uvAZ+cUFSTZIAFAoWMksLxJTJS
      sVUbZfgoc4ZNdEjod9PpstZvIZFEUlJze+SGO+lKrzk2+XfR8hzudpv8q1vrjy36dRR86+4m
      Xe/heF4H4Vh5ACklf7i8xd9/5+Mjx9ePg2dKOf6Lr7xI1tRpew7f21qeGOZThcDSVII4omJl
      COOYnfseXBK/j0aHQ0vVeK44gyZU3txe3hcChOSQvZQpcbPdOLD+N29YvLPepeX6E98/CaQ0
      jZ+/OMNaf1zIq2JmqQ1cdlxn33lFFQnH5pWpGTb67YkTGSBnWHhxMHIRDUXFUFQuFqa53qof
      +L2CYfNr721yq/noya5HwX/6pef4yft4U4+CY+0Ab6zV+LtvX30skx/gWqPD3/z+hzhBSM6w
      uFio7qO16YrCVCqDPzyk7bj9iSG9WErCPUmgII5JaQa2pqMdIGwrECz3WgdOfoC275I2Hm/0
      eCmf5Uy2TMGwk9JMBGEEHzea1JzBxMN6JCUdP+AHGxscdj6tWCnmUjksVSelGaQ0g0jGE5Np
      e7HRc7jb+vSLbN7ZbJxotduRn+SdVo+//841HtPcH+Gjeptfff8GQghO50p8aXqR2VSOtGYw
      l87xlenTLGWKo6KVtG5wJlvad52FdJ68cS+LWDRTSWhRJvHzSbA1neAI0Y1y6vFy7F+olrA1
      nVcrC7xWXWTGLtBywyP1N3OjkJVuD2MCTdpSNVZ6zSTsK5NC/Y7vktEtbnd20CZRYYdoDqJH
      7q92EviodnjI+rg4kgEEUcw/fPcag0+oO+K37m7y/dVtkJIgjukEDl4cUHf7rPZb5A2Ll0pz
      pDQDTSikNYOXSrPkh7ygi/kqK/0mXhTyTH6KrGbTcj2+tXabP1i7Rd1x0IU62l0EiYGcyZUP
      zqzuwXTGYi6Tfiy/vWybnCsmtA5NUdAVlevNxrESTkEcM/DlcKXXmE/nebk8h6Vpo1/nRgGa
      UHm2MI0b+nQCl5SmT9QdyhsWxD8ahTXbA/dEzyFHMoA/XN7kWmNyMcjjgAT+yZXbdH2fj5pb
      uMOMaCRj7vaa1NyEEz8IfZrDmLiUkiBKfP5tp4cY/rPcabM16NPxPdwoxBkqp/WCEFs1ea44
      zalMgdmh6NRRaoBTmsE3luYn1g48Kl6dKSXEtyhMqNjt1r68w1HQ9j1q7gBLU3mxPMtsOjeq
      U96FKhQaXh9VUZhL5QlkjBSSjGFQMGwKhs3ZXJnPVRfoekcbQxT4bL/3Ju3b1ye+HwzlZXb/
      299cO/ZvO8nM8AOfthdFn0roa6Pn8C9ur+LF+29803PGtHf8KOJ6O9HQiWRMy3comWmQyqEy
      gk3PZXvQZ8vpcL29TRBHlB4gKCWA2VSWM4UsX5g9PKF1XMznLDwG/LC2zJu1ZTq+y2rveIzW
      vRgEEU4Y8E59ldVek3P5CrqSRLCyuokQsDUsyofk/wehTxBHzKazVOwUi9kCpqrR949mAP2t
      dVTTIjO3SHdtmc23voff67L51vdo37nB7d/9DRrXrnD7d/4/uqt36a2v0ttYZeOHrxMeQX4G
      +GR3gHc3G8cq9TtJfHd5e+LrsUwcFU0o2KrO6Wxpn39ac3rUHiBmBbA56GGpBrqiUnN7TKcy
      mOrB6ZHFbIGKnYQy//jpBc4Vcsf6TQdhPpvmfMUmlPEoz3G9XaMfPHy0yY/i4TlIMgh98obN
      86UZMrqJqemYqoYuFCxVH6sdjmXMjU6Nu70GN9pJXcFRd7vs/BJ6Ks3GW6/TuPoBcRQyqG0i
      ZUz77k3yi+coPfMcudMXyC4kmd3Gxx+CjPEmqHJMwid6CP7B2uTCik8CWz2POByfjKaise10
      WO41CWVM1c6wmCmNqSUIQEpxpBxFJCWmqhPEMcu9Jje7Nc7kipTM1FgEylBULuTLzKSyvFNf
      4VprGyHgTz97jucqh5PpHoSCafCvXzi9b5L58aMdPAWCGEkn8FgdtPm4vcXV1ha90KPu9thy
      urxaOUVmWANdsdJkdQtdUVGGv35Xmyh9CG1lbMydFoPtTcxsnsz8Iqqm38uDZLLo2Syt29fR
      DJPu6l2MbI7M3CJCVdHTR5N1z5ondx45NBPshiFX6yd76j4uAl/ntakqTW+AreqoisK19r2d
      oeEOaJj9RMwKga4ksoKrvQ7tI0qjNNwBUiQTLZaSQIZ8afoUt7sNtgZdSlaKM9kSpqrx3a1b
      iQKz7yCBkmnzi8+cZSlX45t3V/GOwZERwKVykZ8/v4StqcwGOW53k37GihDMpfNsdF0eNvRg
      qRq6oo7cxc1BZyyK50Yh3cDDjyJ6gYeuJDQPVSgoqsBWDdYHbVq+Q848WnGKmS8y89pX972e
      XTj9kL9iHKoQlOyHK3mdhEMNYGfgPdaEz1Fwt9XjTz6zOCp46QUeqhCjlbEf+vywtjr6fBjF
      rPbbqOLo1URp3aAX3uMBJcUnHe50dwBY6/sUTZucYY2tyBuDNttOh/P5mGJa8PmFDI6ncaPR
      pesfnLFMOszk+PxslbOFHGKo4JDWTWZSWUxFo2ylKZopPjaauA/Z1KNgWpSt9IgGkjMsQNAc
      JrtSms76oEUncPHjaJRPUYSgamXYGhbg+L6Dqp9sBvZhMZdNYZ4gK/RQA9jqO2NuhJSSyPcQ
      QqBoOgwlBOMoQghAKPtKE5ESMUw8xVGEUO59RsYRQlGRUiLjGGUC/WG9N56ZTGsGz+Snudmp
      YaoaTW8/ga3hDUipR6NeK0PZk5udGm4UcDpTZi6V4736+tjnVnrNkaq0G0qiWKKKpILrWmuH
      vGGgKvDqTJGfObPEVt9hrdNjc9Cn4TpYqsZsOstsJsViLkNK1+7dByn5sLE+UnObsjKJCyYE
      i9n8QzX5Th5HzN1uA0NRKZkpmt6AxUyJrGay3u/ghhGaEOR1m6xhstIf7vYS/PuIiNMZC0NV
      PlEW6CQ8WznZeuFDDWDf6i8lt775O1i5PFahhGqaZOcW8LsdnGaD3Pwifr+LmSugahqtlTso
      ioKZL6IaJo0bV6lcfB633cIulKhfu0y6OkOqUsVtt1BUDRlH2KV7ZXlNx8ePIjRFGWl2xjIm
      iKMR/2USYmJyhknnAW7QjJ2hNox+AHhxmGR7dYMd794hWhUqG/3+fUXwyWTo+AFtN2Auk+Zq
      a5ucYbOQTTOIB3RkiG0nt9nUfRbyFdK6ThhHbPa7BDKiYqbHxrnt9nCHolanc3mutxp0/ePt
      xGldpxc67K5HXhxhqhphHLPaa4+oIB6JKsXzpVlCGVNzdpNogoyWSL6bqsYL1Vm+WWpz5YQT
      UcfFVxaqJyqjcqgBTCp1i8OAOIpACELXof7xFWQcY6QzxFFI7aMPiHyPdHUGu1jG63ZYf/v7
      gKB09gLd9VXiKKSzeoc4DHFbDULXIRj0iXyP+vWPuPRv/FtoZpKQCeOIH9buUrEyWKpON/CQ
      UjJj5whkTC+cPDEEgpfKs7y5vXogrTpnmDxfnubjPYJUTuiz2muR1k3KZopBGGCqOqvdHm50
      cPjNjUJutducyefJ6CZ3ug3uDP35XXQDj3fra3x5eonr7dqornlDbY/RLwRiFLO3VI3Xpmf5
      9trKPhr2QbA1jRerVW517wUwdEXl+eIMt9uNfTwoJwqSiS8SoqATeoA3TBDavFSew9Z0fmJp
      5lM1gLJtcql6ss0JD3WmJjEyc/OLnP5jP4VVKJGbW0Tbo8HjNOqkSlVU3UTGMTKOkHFEYeks
      iz/2k4l6rAChqAhVSyIFs/PEw6SP1+uSmZ5LDGwIU9MoWxnudFtcbm6x3Gux0m+z2uvgBAf7
      pSUrRdGy+erMItOpDLqioAwbZluqxtlciS9PL+KEPqaqoysqFStNFEs2nS43O3X6YcCFQpWW
      Fxw6+ffibrvDjjs4sMqsH/psDro09uwuThRQtdJDpTeV2VSOLafLjtsnRjKbyvDV2YV9ZZ2T
      kDUMvj63yOlscSTGayoaAnhz+y5NfzLZbaXX4kZnZ+yMI4GG53C9XUdKyY+fnqF4zKq+k8TP
      X1ggdcL9ng+9Wv7+cJMQVC+9CEC6Oo1QBHoqjZQxQlFQVI1+bYviuQsoqobXaZM/dRqv10UI
      QeXiC/S21okDj+kXXkFGMYquo6fSEEv8fheEQLfucXgyhkbdHewja8Uk2v66qu5rSGGqGudy
      ZWpOjxudOk4YYGoK03aW+XQeW9MxFJWVfotrrUQ/SBGCvJHiVueeBqgTBdxoNWgcMUGzO673
      6ptIcXDsZrnXHFvNdUXlfL7KhfwUt7o7rPZarA3aw6RbjkvFaRYyWbKLp7m8U2Ot1923O1uq
      xmI2x3PlCqaqcauzQ8t18cMYqUTU4yQrXDLT9CbkFg6Tk9wadDmfL5PSDP7NS0v8vXcmZ3kf
      JwqWwc+enz/x6x5qAHPZ9FjxhxAC3U7i7eqw7E+5b1XKzt4b5O5nU6V7u0Rh8czo8MzQvnYP
      v9qE7usFW6VzgACsBPK6RcG02XK6OFGAoai8Up7HDUPeqa+NcXtW+y0Kpk3BtInimLVea/Ru
      LCWbgw6qUIhkYlACJh6yH4Sm65KzDr61pqqhCoEXhWQNi7PZEoai0gs8VvewUSWJmtuUnWXK
      zpA3TD43NcOzpTJOENIPAzq+iyJgKVugbKUIZcyb2ytjtGY/jpJ/o4hz2SoDyx8duHeNbNvt
      Ex5wwI1kjBuGpDSDnzk3zx8ub3Ft55OjxgjgL7x64dAS2ofFoS5QwTIonmDMFRiLAh0Fs9nD
      S+CCOOJsrszFQhVFgB+HXGlucqtTn0hsW+42GIQ+O15/3zh0ReW54gxpzcBUNU5ny0h5/AOX
      hDEm6l6Yw4neDTz8OGIQ+KQ0E4mkH/oTqdjbTpdbnTqr/RY/qN3hw+YaiioxVWgHPRp+jw8a
      6+y4fa63D+b0hzLmw8Ymz5dmeak8R8lMMZXKMjOBJ7QXSX4lWaRMTeUvf+ESKf2T65P89aVp
      vrY4/ViufegOYGkqz1UKfGfl5BXQjgIBfH62yspg58DPmGri364P2iPGZC/0OCiB6sURlxsb
      dAKXhXQRJwwIZYyuqJzOliiZKcpWGiklMZIrOwf/7cMwa+eYstPc7OyM3LeSmSJnmGPnAycK
      WO23aHp95PA33z/0Qeiz5XTQFHXk+iz3mgRRNPpsKGOWe60H0j+cKGC932bLvccBSiI/B09o
      W9NZ7beQPclcOsdiPs1/9IVL/I03Lj+22pBdXKrk+Yufv/jYNEMfmFH48sLUI2gtPxrOlXI8
      UyyR0yfvAgLBfDqPF4djnVQUISgeoH9pqzpz6Twp1ULGKpq0CXwNkxRtN6TrByi7MihCQT+g
      eOZBsDSNaTtL2UwhpEAVSjLGCfOl4zu0fIeO7zBlZ0Y0BEFiNKaqoQl1TColp5v7pFO8OJxY
      6XY/bnUbY30FYiSBjCZSoU1VI5QRq/3kXPLuzhrdwONri9P85S9ceuj7cxRcquT5r77+8pFp
      GA+DBx6pX54uMptNsf4pKAH89Nk5dEXh+dI07+2sjx3UFBLJckNNShxBMm1nCeMYKSVlK03X
      98akARUhiCKF76xsUes7hHJvmDLxaTVFMJtO88r0FGfzOYqWTfeYhDRtaDg/2F4ehWDjWLI+
      6KAOe5DtumfpYTcYtxlgqTqXCjMsZfyhpo/Ocrcxpv1ZMGxsTSeSEk1REFFiUz439/YAACAA
      SURBVLqispgpHunAHsYR969qsZRcLFQZhAF1p08kYwqmTUrTudzcHH0uiGMa3oCcYfGTZ2bJ
      WwZ/43uX6RyS+X4YfHmhyn/8xUuPxe/fiyPVBL++ssXfevOjxzqQ+3Eql+av/8TnMLUkU+zH
      EZuDLt3Aww0DCqbF6WyZjUF7xA16rjhD1/dY6TcRCJ4tTLHW7xDJGCkFNxt96sfgki/lsrw8
      XeGt7bVjFf+fyRXQFPZpee6iZKZYyOSoO316oY8bhaQ0nQv5arJjDLd7P4r43tbtMSPO6MZI
      AgWgZKSYTxfIGRaWqvEH6zcf2CBkIZMf0Rx2YSgqU3YGkJzNVVjuJnUXxlCece/vf7E0y8yQ
      miKlZMfx+Dtvfcyba/Vj3adJKFgG/86LZ/mZs3OfSN+AIwVVvzQ/xe/f2eDyJ5QEEcCff+n8
      SB1YCIGpaixli/QDjzdry7SDAbqikjcsqlYGQ1GpmJlREbwiBDc79UQoy8jyw/UdeofkDSbh
      bqdL0/WYzZmHyrTshamqXCxW+GHt4BqKXuARy8RAdidM2494u77Kq+V5qnYSv9cUBVvT8f17
      BiAQY26OLyMqdnpUyHMhX+W9nXEax15UrDTPFaaRSGpOb0QrX8wUWO4lsjJ+FI2iRAMYKmok
      zFlb1fGjRKV6V026krL4K197ibc3dvj1K3f4qN4+8O8fhLSu8ceWpvnTz50+ce2fw6D+0i/9
      0i896EOKEDxbyfP66vax2I4Pi68sljhfsYhkPJI+392o3CgcqSX0Ap/Vfgs/jrhYmMbWdLK6
      Rct3hjKJKkiFdzcfrqoKkoKggR9Rss0H+te6ovDq1CwF02K52zyQyiwQNPzBRGmWfuAzk8ri
      hAHLvQZeFGKpGrGUlMw05/IV6m5/dOA3VY1+4GGqGoaikjOSs0HTc/atxkXT5tXKPKamUbUz
      lKw0AoEqVLwowo9jiqaNKpSxDHtGM3m5Mk/d7dMNfOpun7V+m17gUbWSphahjEEJOVu2OFO2
      SesqQcRECRpI6gsyhsalSoFfvLTIX3rtWX7s1NRj9fcn4ViyKO9u7vA3v3/5sRKinq1m+PKZ
      e51CXizOkTesYYsfh3ioYFAybepeb+QeLGaKGIqKqWpca20TypicbnGr4bHRe3Q1g/lshmfL
      eW62G/s6rwiSDKyhAUhSmoEfxWNCvXuR0vSJIr8wpPuaNi3foWKlccMYIVUa7j2j1hSBoQlm
      UhnWB22COKJopHilsjBUjksEsBreAIEgiCMsVWU+XSCSMVN2BoHgo+Y2K3tyIZAY8XQqw/ae
      3el8roIbhSxPyG4/k68wbWd5t75fajGrm5zOVOh5EQ3Hw41iVJHwlKppi9mM/Yn0ADgMx9YF
      entzh//1B1ceixG8MFXkTz0/x+rg3uG0YKTo+cG+yaQpCmlNw40DNKEwZWfYGHSwVZ2cYdH2
      HTxf4f3tk3Pbfu7MaZbyWWpOn7afyBamNJ2yZXOjUxubACnNoB8E+zLYqhC8VJ7j/cb6xEJ3
      XVE4nS2x0e8QRIK6s18DCBKjm0qlUdUIPw6ZS+V5tjBN23d5d2eNII5GDbq3nA5imHiTwLSd
      JaNZfNScXHGnKwrn8xV6oUvZTDNtZ/nu1h2cCWeLnGGhCeXA8GvRtPnC1KkDpWg+bRyLWCGE
      4POzFf7K117mf3vzoyO3wnkQFODHT8/y7798AT8O2XJaBMOJs+MMCCdMgDCO6QchL5RnkpUy
      SqS/y2aapWyJlV6Tb21v7vveo+CHW1s8UypwKpvn1H1j8e+rXdYVhS9MneJaqzbKZJuqhiIS
      IygaqTG26S4qVob5VIGbzfbEDi+7kCT9kNOaznw2TXvo9t3s1EfUEEmSL1jMFJLgwfB81PIc
      Gs7Bzy6IY7adHm7koQuFXuAeKJfuhgHuIe5ly3Noeg5V+/GoaDwqHsosL5bz/NKPv8pXTyBH
      UE1Z/KUvXOLPvXSWHa+XqDwLga3qLKSKEyf/LkIZ03QdBIL1fpsoTvhB11rb3Om06B6xkPuo
      qA0cmu7+w7AqBJX7usCXzBRd30MTKoaikzNspu0MkYwYhD7Pl6ZJ3de8I6ubPJOv8k5t88gU
      jH4YsN4bYKjaSBhgL3bri/04HHa1VCiZqVGw4CAEcUTWsGj6Div91oHxflvTD4387J5rflTx
      SC2SpJTcanb5px/f5b2txrGygpWUxc+cneNLpyrc6GyNtvm9D9BUjAfy+ZNKLYONwT1uiiYU
      iE3e23q4LO5h+KmlRV6olsdei6XEj0I2Bh0a3oC0ZrDW69Kf6DKYfHH6FClNJ4gjLjc2qbmJ
      TPulwjQN1+Fba3ePpQMkgMVclkHkULYyY3mDomkzCD2COOZCvooXhey4fXr+/i6SezGbyvJK
      ZY61fpvrnW1OpYu0PHckQbnLIaraGd6uHS5tUrVTgOT50iwp7dNjk07CI3FLhRCcK+X4z7/8
      Ahs9h3c2d/io3mKl3afheKPTvwBsXWMqbXG+mOOl6SIvTpUwNZXbnfqoGOV+NYYHyfVBMvnu
      576EMqa5p1t8HEVc+e530A2TdLHA3PkLKKpKu1YjX60e6zc33WRl9qJwdFC/3Nyg6TnkDIuU
      prPa6x4Yi+/4Hm9vr/GVmUVudxtsD8sVNwYdMrrJzsA9dtcVCbhhUlJZtTIEcUTHd6naGZ4t
      TLPj9rnZqXOjvYOUkrRukLovvHo/qnaGfuhzrbNNLCV3eg2eyU9xLl+h6Q1IaTrTdhZ/WGhz
      0I6yG0JtB0lTw8+UAexCCMFcNsVcNsXPn18gjCVeFHG9XWel22Yhk+NScQpdVYhkUnStiqQ2
      tR24qEIhZ1jMpwt81NwklDG2qjOfLnKlsXXoFlsybdqBs+8B7N2NOvU6helpFi4+y9Xvvc6H
      f/gtijMzDNodtm7fJgpDyvPz3H7/PZZeeIHVq1fxnQFzFy7SqW1TnJ3l1KXnAHCjKGk80W8h
      EKR1g/awb2/bd0BXHpiIangOt7tN7t5XMHOrs0MYPtxhsev72LrBtfb2KFy7u7BoiooT3os6
      dQOPrG5iqdrEYiFL0+gGDk7kjxljx3fI6iar/SZSSgxFo2jaPJOvcLm5tc9wk0N4AV1ViJE0
      fRd7qM/6o4ITP5oLIdBVBVWBpt8lZQoaQZcdv8fb9RW+u3mbN7bvsNZv8+GQwZjWDF4ozhHH
      kNZsFDQymo2t6gdyeiDZMWwtoRbvPYtYqjaS+gDQLYt+q0Xg+5ipFM9++StEQUgUBgS+x4XX
      XmNnbRXDsti+c4fq4iKZYolBu8WzX/kqveZe8prPci+J8Ycypu27oyRUSjVouEejjCx3W/sM
      O5LxA33zgxDLxMXYi37g0/QG1IcJr/s//7nq/LAQJ1mQLFVjJpUlJmJt0Gal1xyxQBUhGIQ+
      HzU3CeKIUMb0QhdJkll+oTRNWjNGi1tGNziTK7HhtLnWrg0La2p8d/M2dffTF9ndxWNrkxrE
      99L4AlDEeOGKMpQwCWSEhkYQJ11R9g4mia+bKELuW6lSms7ZXIktp0Mv8EhpBk4YooqET9ly
      Ym41kxstpWTz1i0G7TbVxVOkC0X67Tah76NqGrXlu+Snpmhvb1NeWGDj+g3qa6u89rM/x/KV
      y5x+6SWsoWbNC9UiqN6eMQrO5ctsDDqcy1V5a3vtSF0TU5qOratj4d2cbtJxo4eqQcjoBj+9
      eJb3G2ujcKyl6giSZ3H/mKpWhpfLc0RSstprseX0MNUks36zmxQFqULwucopVnptnDDpn5zU
      ZksMVaUbeExZGRRFYaPfGSbrUpzKFLE1jbfqqxMjWZaq8WMzZ0bG9WnisRmAlJL1QZu7vQZT
      Vo5b3f0H0sVMAT+Kudk6XJJcVxTO5Yujrig5w2LaznC1tcmO1yen29TvW3ktxeSdjeZDjfvO
      B++Tr1Qpzc3te/9PPXOOmtceSYsUzdSwlalEV1QG/v7JNgkZ3eBSqcqNdm0k3f5ccZqrjR1u
      H1EhbS/m0lm+NncKJwq40thmezAgpVp0AxdDVTA1FT/2UYTAUFUKhsXZXIWVXmsswSVIElWa
      olIx09QcZ18jbgXBTDpDKAMEgs59NJHnizMUzRTf3rx14HnmterCvsjZp4HH0iUSEt7Icq+J
      MwzBTYIThqx0u4dOfkji0qu9Lj8xf3rsoDyfLgw7wOxfZbzYx1SVY1M3hBCceenlie+ldR1D
      EwgvEeHKDHV8dutsYxmT1g1aR1jB/Tjgo+YmihCczhapuz3e3Vll2sqjDBXdjoNT2RzXm00+
      rNepO7s0iPH7oiuC+WyGkm2z5XaSDjH3JbAkiRr4K+UF3q2vszPh3sZI1vtdTmXyCBHDfQZQ
      d/vkDOtQCcPDIoauFzBwk/OHqWukbRPlcSgR8xgNQBGCgmETxhG6opA3rDEOuqlodP3gyE2W
      e4HPnU6LZ4plBIIojhmEPl4UTYwWSSTzudSJdjQpphTerd8L+TU9h47vkTMtYhlzKl3EUnW+
      t7l86PQVgKIkEymWktV+i0jGyQPXFGYzGdaOIYqb0Q0u13dY7R7+W4NYcqfdZa3b40I5R96w
      2Z6QwfXjiBvtnYmTfy/Weh2qqf1nNH3YdcZS9YnNS5Rhw/EgjFjbbvHW1RUu39rg6t0tNnY6
      dPv3ImFCJFn/Uj7N0kyJi0tTfO7iKV48P0cxm3pkxuhjc4EgOdT9YPvuSJg1p9s0vAG2prGQ
      LvDG5tqBkiWTULFSfH1uCUUIrjQ32Ri0UUUi1nT/jxAIXi7P8ds37tI5pqbOJKQNhYW8MfGG
      pzSdr86cQVMUgjjiRmsnCTlOuI4qBBcKZVYHzdFDTtqXmmw5Xc7mKpSNDN9ZXz6StKMmFAZ+
      fGyynyIEL1XLtML9RqOKpCfyUeog5tJZvNgfRb50RUVJ+pCQ0Uzqbn/8PkhQenDzoxr/8gdX
      ubFaO7B67zAYusZrlxb5ha89zzdeu0j6IdUqHtsOAENx1uHqLICUrrPtRgzCmI7vHTvi0Q8T
      bs3eA7UqBBU7vW8rr9ppKlaKbyyd4jdv3HykzjaaIljKp4kPUHoYhMGIgrA9jLhkDB2BQs9P
      6nwFSRLsxfIMBdNGVQSr/SaqUDDUJEwZSZkoQqd8vja/yFtbG2wN9kdwdlE0LXYG/kMxXWMp
      eb+2w1LBRorxHXTKzlB3jl4A9fnKqYShKyCKY5b7ydnLiXw+V1ngdrdBL/BY32zze9+8ygcf
      ruEHjyZx7gchr79/i9ffv8VM+Vv8mT/+Kv/2T3+ebMo81q5wJDr0w0IIQcFI4YQB8+kC19rb
      +HFEEEe0fRc3PJ5/bigqC5kcq/3WcMLEPFeYYTGbqDOHMkIRAkUogGC528KNfUxVpek83C6g
      KYJvLJ7CMsREOZFdqEJQG+r4SJJ64sVsgfP5Mi1vgKIM1RWikLKdpu0PaPsetqrTDzwGe1wF
      JwwQQjCIXTRFYGk6CkmZpq1qVFMpXihNoQiVW+3jc+93IUlUtM8Xk7OUIKkXeLY4xeagd6Td
      OWdY1N0e64OEu+SEwej8UrEynMmV0TyFf/z/vMmv/vr3WVtvHdrF8mHQczx+cPkuv/ntD8im
      LS6cqqIekXz32FygaEgQG4QB7+6sktYMBnsaPKtCoe/HeEcUnIKEcmyqjD2YtGbw2tQpTEWj
      6Tm8W9+YOFEdP2a75xMd49emNI2fObPEUi7LrU6D6+3JUvECQdrQ9yXAMrpJHMf7Xi8YVtIE
      ezhRXinPs7y3RakcLx02FJWUpvNMfoq0bo7Egf+vq1fpH7PIZxJ+emkJqYSjxNxMKkcUw+3O
      g6NoBdPEi8fHULHSzKfzlMw0v//mNf77X/kXbH+C3SVfu7TIf/sXf4H5I6jInbgBSCRrvST5
      Eck4qY9VFebTBTYHHfqhjyCRDfFCyebg6EmRtK4ixP7hVq00Emi63qFZWAUFVRrcaXcPNTxL
      U7lYKvLF2RnWBy22nS6GotHynInFHQvpPEII1gbjq7Gt6hMpxJpQ0DUFLwrRREJ/lhK6oYeh
      qHR9bx+3Pj8sdJmysyxmiix3OvzOnTsH/obj4FQ2Q8aWI26QIgTPF2Z5t75x6H0qmBa6Kujd
      FwUqGDYvFmb5n//xN/k//8VbJzLG4yKXtvjr/+Gf4BuvPXOoS3TiBtALPN7YujumyWOpGuYw
      cZLSDCxVp+H1kRL6gTyS5mVWN9BVOZHAldEM0prFcu/B7sBStsD5fIXVbo+NXp+W5xFEEREx
      tqYyk07zXLlCxjBY77e5sqcgPK0ZCMQomqUgmM/kebYwhRuFvFlbHo1PEwrP5Ktcae6XlLFU
      jRfLc9xo1xAoeFEASHyZqFsUzTSr/XuxeVUovFiaYWPQIYgjPlc5xRsbG7xfO5nmJaaqcq5s
      j9pRaULhC1NLdH2P92obeBPueVY3+PzUPCu9JuuDcZGsDCa//Cuv88aHd05kfA8LXVP4z/7s
      N/jzP/fFAz9z4meAmtsb6dHvYpebEkuJpepYqkY/9JOyOM3Ai+JD4962pvOF6XlavjPRAGxN
      TybyEQzJi0LO5UtMp1Oczuc4nc+BEhIRIJQYJ/Koub3ERQv9MVU6Q1H58vRpplNZQhmhqwpl
      K0XesBiEPoPQJ5IRBdNGEYk+0f01vJBkt1d7HVq+S383lBvLIeVYcipTJIgj3KHS3Uwqx61u
      HTcKeKE0i6XpXKnXaXkn0ywukpLXpmcYhH5CbUgXhj2TG6iKIK0lB8ukGbfBUrbAi5UZUppO
      1rCoub3RIhZ6MX/nH3yHd66uHv5HPwHEseT1D26jKgqvXjw1cSc48SiQPUGXXxWCV8oLLPca
      NNxBIrmtJMpra/0WJdvAj6DtuWNmoAjBtJ3hhfIUWd1gIV3go9b+FXXKztJw6vten4RgKBNo
      DDVF366v7UvXD8KADxubzKSyCO5JmEzbWRQh6ATuyMg7bZcwjlnrt0craNd3R7mJipUhHcV0
      ho09imaKmtPfd8AMZYwMkzzAaq9FMMyfLKSTJnXrg3s10Tk4slL0UbHjDhAkWfea02W5dy9M
      a6mSsmVSNFOj7K0xVPizNZ0vTS3R9AYM3IC/+su/xeXrGyc6tkeBlJK//et/SCFr82f++Kv7
      jODEDaBo2szY2ZEkiCBZoXfcPr3AH63gITGWqnEmV+Z2d4eyZSEJyeo2mSFTMWeYRDFs9Aas
      xD0MVaGgp2kHAySJLs65XIUZO8fHzfpE0an7IRAk66xkuXdw1ZUkmRTPlabpBx6hjKl7PRq1
      wb4ioLrXH892C8hqJmGckNu8KMTWNC7kq7R9l5UDXLVISnJ6wt/fNZA73R1ersxTMtN0fJdB
      EOAZIfoE5e6HhSCJoHlRyHOlWdww4NqeA78fRWRSJnd7TT5uJ3F7W9O4mJ9iys6gKypVK8Mv
      /eo/+5FY+e9HLCX/w6/8S05NF/nKi2fG3nssUSA55Og7YUBK07naTqiyYRSPuQPncxUsLZEm
      /6CxRiQlBcNmLlXmve0ad9qdiW6NoSos5jJ8aWaWkm0TS8l3N+4eWkK4i5xh8trUPKai8WZt
      MllrL14qzzCfzvG9rTujrKYYarLFSFQhuFSY4W6vMZJOyesWXhSSN+wxbaC0ZmAqOlvOwRGR
      tGYQEY5xaPKGPTZOQ1GJI43rzYcPge5FzjD4icV5bnbqqIrClJUZqW1AUt+cuGTju5YAPl89
      RcVK8+vffIe/9vf++YmM53FhupTlH/21f4+Z8r3Ono81E+xHIeuDDnW3jyYSwb9d10ETCpam
      0ws9FARpzaAX+NT6ITuD4EhFIYai8MXZGV6eqrLaa/Nu/cFbb8kyCWVEVjfp+MEDufsXCxVO
      Z0t8Z/PmyHg1oSTlgt6AipXmpdI8XhRys1On47tkDYtB4KEp6lixjioEGc0+lA6cNyxMVRlF
      gRQhJvJmogiW2ydTk72QTWOb4/IlF3IVvDhCEwmX/2ZncnVd2UozHaX5c3/1/6DV+3Ta6R4H
      P/WFi/xP/8kvjvIEjyUTLKVkc9Dlw+bm2ApuDqU5UppO1crwZn0ZSFbSnJHiVsOlfoyElR/H
      fGdtne2BwzcWF9jJDA50LyAp81OUmJYfDJvtPdiNsFUdVQjOZMvc7NQRImmqt8sGrbt9tpxu
      Im0+1CvaZUfa6njhR0Y3mU1lDzUAW9NJ6xpz6fzwHKDyYWN/cb+tq+RNg7b3aDQPAcxkUjT8
      ce6RF0dcLCSNwPdKI96Prufyq7/2xh+JyQ/we29+zDd/eI2f/uKzwGMoiAHYHHR5b2djn/vi
      RRErvTY5w2YQ+cNDl0peT/P66jb1Q5QKDsO1ZpPfvnWHZ4tTfHF6gWk7UYpThcBQVKp2mi9M
      LfBqdY5LxRku5KvDA5y2T2B2L/KGRdXODNWZu+yeIO7PZK70mhNXSCcKKJtpMpoxXMlj3Chg
      KVuY+FcrVpqKlUFIlZ4fDovprYnS5ULAdMYY1j88PF6qVnm2WBn7G4JkZd9FVj9YIv/ytQ3+
      4K1PvmHGo+C/+we/S72VeCKPhQpxpbk1ltrfixiJIgRbgw5uFKAgWGsHE9UWjoOO76MKwcVi
      CVWFiIiyneLlyhxL2TyhTApzUppB3rAJ4oiMbpLWDTqBt+/8bKkaWUMnktGo2F0O2ZtBHDFl
      ZwhlzLSdJZL3yg/vRyRjwjhxL4I4GglezacLIy6UqWooKDRdl5Veh22nz7bTZ6XXYbXXwdS0
      EacKkl3ihdIsJcumbKVY6R6dOboXc+k0P3HqFKamUTBtvCjx86NIsNnv83Grzmqvg4KCE/lE
      UrLX3mQs+Sf/99s0W5+8cPKjwPECdE3lyy+cfjwu0KTs5/3vl600/Z6HE8Bm/2Ru4Dvb2yzk
      Ulxrbw3zCg6mqtL2HNqBi4Lg+eIMLd9luddEkvjlM6lEKa0fJAUjZStNStf4uLVFN3D3VS5J
      4Hy+SsPtJ+HCQ8bk77aQ3YOa08NQVVK6xuenFrjdbnKlUZsYxPKiCM+JKJoWS7kcG4M2F/JV
      SlbSfWcmlUQ53tjYOFYx/UImwzeWlka+cFozk1C0O37QdcKQhusgAFNXMBUFiSSjm9y4vM2t
      O0cLP/+o4Tf+8H3+gz/55cdjAKamHbgDQLK6Ji6KwkNy1CYijCXv1raxjHsTYXPQGUUzYiRX
      WltjrlkkJXW3xxenFklrJm4UDLU4oWH1R8rNew/LOd3CUpPXkgZ32QOJclnD3EcVUIZJNk0o
      7LjOgZN/L5qei9YXBDJkpd/EUFWyuommqLxQqVCyLF5fX6fhHu5GaorCy9Uqr0xNjdTaojjm
      jc0VaocwQCXgBjHncxVO5wroQuFXf/j9B4z6Rxe1Zo83Przz+Nig95fR7UIAzxanyegGvSDg
      eqN7oIjsw0BTFAq2NmI3nkoX6Qb3EmwHrZIKgjvdHW51kiZ1WcOkPWxcMQgDqnaGlKajoAIK
      Hzd3qDkOUZw0v4jl/my2pWpcyFeGVXH36NuaohDHMXPpAjdaTZwj0sLdMOJUJseO12dj0GHT
      6TJlZdBVlbSuM5/NoCgJXURKRr2VLTU5MBdsndmsiVBivCggo5toisLHzTp3u0cLqe64DkvZ
      PJ2uy//4j/7VgX3F/ijA8YLHswPMp/PsuIN9HBFICFS3u3UEiZbNSWuM9v2IF4tLrA7+//be
      PEayNLvu+739vXixL7lvVZW1dFXvPd3TPUO2embIoYbiUBQpEJZlUvJQtkEItmkTEvyPYBOW
      ZNiQBFuwAMEgIYGGTQxEj2lpKI6GwkxryN737tq3zKrcl9i3tz//8SIjMzIjt6rM6uruOkAD
      lZ2xvIj87vvud++551RoupGr/fnMMCutWlfFoV9vYd1qdHNyLwy4UVnDCTd3DlkQaXkB8/Wd
      /PyG63RmaWUGTRNRECjbTVzf42JpiZxudrVL44pGxW7hhQFzjQqVQ1RxgjBkpdXsli4s32XV
      ioytr5RXu7tQTIOUoTIZTzORyCAJAlcrK6y061hBgBW41NxI5Oqp3Ci3qwefnfbDgNvVMneu
      rmEdsSnGg8b71+aOJwAEItKZE0T+ugJCR0gpzo3aKk0vWkKud/RznpGGpUDVbmMHHjP1IkNG
      kieyI9i+xwfFebzA2aGInNfjLGwhoImCQF4zWW3XERC4Xa3S9nZnRoZAw/WI2R5PFQYoWo1u
      271oNTuqzS5u4JHX4zRdB0mQWedwOaAbhChbikIlq8V8o7YjKN3A52atSEhITo/tMMQAqDkW
      V0orh5rKA1hpNXj3yp1DPedhRKNlH08AVN1IodgPI7WDL+XHUSW5Ywyx+ac6aj4LbGhR2l1e
      DkSCVWW7zXKrDmHk1eWGPqIgEpdVTqcK6LJMxW7R9KJq0slkjrweZ8xMc7W0zrp3sErLarvJ
      1VLvwVAgcoeEiNl5KllAlSTu1qvcqR3ObjSjGmQNjbpnk1IMblZLe54fbtVKNL3dK2z3otHT
      8jyuzH46xolHjWMJgK1ksHbnoKiIUkfoKkbJbiEikDcMZstH083cgCKKyKKIKkrdvNsNAt5Z
      m+sJPhGBxzI5xuPR0IQT+BSMBEGrTkLR0CQFURBQRJnF5uGGORabDabTKYpWE4RIvSKlGvhh
      SF6Po0sygiBg3oNCmhW4LLbaTCVyiOw0Ce+HktXe4Qm2gajCdcjxxDBkZvHodVc/DRxLAOR0
      E7Op0up4ed1tlLtSH3XHYsxM0/IcPD+IxLGOcCcwVJHLlSXOpAZoeS5BGHCnjwpbQMjVyioD
      sQSu7/PB+kK3ll93bVbadc6mB2h7/qEP6X4YYsoG54YHWWs3uFUrMlOLpq0WmzUm4hmmU3nS
      moEmSYeaisvrMdbtyNB7P+HgDciihCAEO75nATiZzPK+tXwoERa37eHtkQ5+lnAsnWBDUngu
      P87zhQlOJvKstxustGvUnDZeGOD4XifdsMkaRyuWei6TI6dHAyVuZyRztz+uH4astOpcq6zu
      aGRtDKgvt+6tyVSxI5r0tcpaT1/ED0Nm6iXmGhVUSeJEMnPg19RliaIdb/oeCAAAIABJREFU
      daRTqnHgLrApq5xLD/ZInEuCwKlUnvFEmqy+u/xkPxiedKiegyJLDOeTaIpMbA/1BlWRSMQ0
      dFXG0Hbujkmz1zvs6TOj5FMm+fS9ew8c2Q5guR6r9TZ3SnWWq03qloPt+ciSQN1vM5iM8exI
      jlhCYr5VjtSHXYe04bFyRFKRsigyFDe4XIkOs03PQdwnxmuORWUXRqgbBDT9e+tQ+2HAYrO6
      a4oy16wwnkgzkUgy36jua+CnihInU2kWW9Fna7h21Ayr7p+KxBW108/QaHlO5EOQLpBUdIIw
      5Ewmx1tLCwcS48poOqYtHkrKJGnqvPz0NK99fBtDU9BUmWbbwbJdRFGg3rLRVYX1aoMXL4zh
      eD4f3ljgxcenuDm/1g2cRExnpVRnYa3S/V3LdkknDL7z7Rd56+IspVqLtu1iOS7WAfwh7isA
      LNfj9VtLvHp9no/n11mp97fz2YDAJYZSMUZzMX7piWnSWQlTDRg0Y6wcQTf46YEC8jYFMVkU
      90wxTEXtGd/cjnvl2uiyvGd93/Uj8+mZWhFJDlADcdeScFLVSOkKa1adrBbDkFUKRrwjPqZT
      cXY/RwlEPRm7uXkttt+CyjoXsoN8XFzA9j1GOmJce63rmKzwwuAol2qHH3i5dneVc5OD1JoW
      p8bytG2X5WItUplWZIrVJqvlOsVaKzJlnBzk6p0VnpoeRdcU/sP7N/nlrz2FHwQsrFVQZIli
      NRqrfe7cONfvrnJ5dpmXHj8RBdD1g80l3FMArDfa/OF7N/g3n8yw3jj4ITYElqotlqot3r29
      TkJX+EtPTPELT53kVWsO6xC58HYMmTGeGxzomMzFKNstJEEk7BjL9bsTp1Sd8XiahWa1r4uJ
      AIzFk1wrl3b8bj8UdJP2HruHKsmstOpdivWZTAZVULlTr0TOMmLU3PLxSGsaju8ShiHTqYEe
      ctozhRHeWpnrS+uWOjqgdh9pynWryaXSclecN6HJnJRTLDdaO9JGURCIqwpTiVSkgXpIY7sw
      DClWGwznkrRtl2bb4e5KmUbLYiiXJJuM8dGNSHGv2mGVCoLAC+cnqTYsKo02luNyeWaJlKkj
      igKLa1W+8fxZbtxdw/Mic/TzJ4a5u1Lm7MTAgRt0h5oHcDyff/PxDL/72iVKzaOr3iR1lW8+
      OUEsLe3Jq9kNGV3jF0+dIqlF+WUQhtF8axhyqbyEIkp4QUhpS6qT100ezw6hSzJLrRoXS8s7
      dq+8bjKdyvP60vyemkDbkVBUnhkYpOU5zNTKO4JPAM6kC9iB1x1+fzwzjOW7zNYj7f0BI44m
      ycw2ouAzJIVn82MY2wwmbN9juVVnplbC9v1oUk4QSWsGbuhRc+xdd2VDksnoBi3PoaDHudMo
      MZXIoYoKbTcKAl2SKdqNSMSAKBjkpsh/9Tv/6tBGHg8CT50eZX61QrF6sLz6QDtAGIYs11r8
      wz95h7ePof5bsxz+8O2bDGVivHB+kKR58IPxZDLBz0xOEFM2D00C0HJ9bpYrzNTaXQEuQQgx
      ZImJZKRnr0sSgiAwHEsiCiKztSItz420KPVoF/mwOM+QGeNWxTlQpUQAppIpLpeXCQkZMBJU
      HasbQLIgUjBMltrVqBSbHuzSRm7Xit2K02KrhrnF4yAgRN5GyitbLT4qLnbLvaok8WRumLRq
      IAoCq+0GH6zvbprtBgEN18YJvI6Ti8itauT2rkoy08k8KVXnZm21h0ri6j66odBqPXzeXxs7
      yUFxoAD4YG6Nv/f/vcH6Ed71+2G53OJP35njV1+axojLux4MBSCr6zw7OMDZbKZn0Hmt1eLt
      5RVmq/0bTG03oNRe5+JqkfP5HF8eHkKVJIZiCQY7FGcRgYZns9KOXkOTREbiJkvN1p53PRGB
      8WRkMBG5FEBOj3EqlY/SDddBECLq9AYdO6PGuFpZwfZ3TsFltRhGx8VlKpHtCYAgDLlUXu5R
      yXADn+uVNV4cnEToCNBu6JX2g7plrvhmdb3rzAnRznKpvMxoLLnjcCxKIrm0+VAGwGGxbwD8
      +No8v/P9N2nfp5bjQdF2PP7gtev8zrdf5MxUmsVGk5rj4HXMGdqehaYI5HSDXGxTrDYMQ66W
      yvxkfuFAHWYvDPl4bZ35eoO/eGKSjK5H7jadKbGEonMikWOl1cD2Q/wwZNiMNDP7Hapjskxa
      V3FDh1EzhxNEJnQp1WClVadst7rLyOoIYp1I5JBFEV2SyekmQUg3J5cFkaxq4smxyOXRg7LV
      JqlGBDbLc/vSziPFbA9dVtA6ji9zfQyuIQoAx3cZjaW5Xe9/zinaLTRR7jlHJFWNqYEsc4uH
      91942LDnGeDN20v83e+9hv0pND00WeLv/+WXePn0KBAt8Cvlle7Y4QYuZIcYiSW5XCzxk7n5
      ezpD6LLEXzk9TVaP6swh0HZdPi4u7xCn3VC5GDGT+GFAyW520q+I9pHTTOquxVwnt08oGk3X
      7XsXzmoxQoLuCOXpZOTiWLItqpZDzXZwtgSzAMRVldPpLBOJJG+uzO5o0imixFeHpmh7HjXX
      wvF95pvVnj7HRvVowIgjCBGN/GatP69fEkSeyY1wu17E9j2Sqs7pVIH/64/f5Z9+99XDftUP
      HXYtks+X6/z333/rU1n8ALbn8z/+8dvcKUZpiO17kQLxNszWSiy3WvzZ/MI9LX6IaMb/bmYW
      p3NntzyXt1bmWe6jzBwS6QattBoktUjBoe5GJtXnM0OMmKkeclnTdXZNQapOu8ddpek5KILK
      fK3JetvqWfwb7113HN5fXeaNpQXSamzHa+b0GB+uL/Hny7N8uL7E5fIqdScSHhg04pxLDzAc
      S1D3LG7V16k6Frq0eyKgiCIlu4UsilzIDPFkdoSYrPLlC5P37RH9aePs5ED/ALBcj9/5/ttU
      WkejPHavqFkOf+9fv0nLcbF9r+8h1PI9Xr07d98zBSXL5oOVVcIw5Fp5vcfMox/qrs3NymYT
      KghDrlZW+PPlW7iB3zWljivargtlgx8F0d297fq8tbxwIGrESqvJStNiIp4hqeqkVJ2pRJZ1
      q81Ku9FzngiJBATW2i2SamSbtIENN5ftFrUbSKsG880KZbvFcrvWTTnPTAwwPnTwLvbDiJ95
      /tzOAAjDkO++e4OPFx6OUbdrK2X+zzevElPUvsPhVcujdJ/zxBv4ZL1IxbZZaB6MoWl5ASkl
      oiRoksJSq4ble1ScNqokRZ68stpTzdkKSRBRRJEzqQGGY2lmq4cbDirbFhXL5YWBCV4YmMDy
      vD1d2Z3A53Jpped6DFkmJqs8kxvtca4XgNFYpHua7ChSu0FAzbEIwxBdVfjWS+cPfK0PGzRF
      5me/3CcA1hpt/uUblz+Na9oVf/DOdVZrbc5mBhC33E9VUcL3j47OZPs+V0rFA5Pz/DAadpcE
      YYdygi4pHUNqlaATCBuIzDJ0hmIJHs+OMG6maTk7hacOgju1KlXbxgn8PQW3NlB1LEZiaSbj
      WXRJwZA0ZuslREHgK4Mn+FJhnDOpAilVp+ZaXC6vMJnIYcgq61aD99fvdkc8/8orT6Gpx+qx
      cmz48uNTnBzJ7QyA33/zKq0DcCgeJNqux798/QqjZoqXhqY4mx7gfGaQFwYmaRzxtR7Gmwsi
      7c9UxwREEsTIPE/WOodhm6LdIOgoP2c0g7Sqk9VjtDybu41y99yx3r43XR0vDJhvRDtPP+Hg
      7QiJKOoN16HhRnIvN2vrvLEyy91GmZSqs9KuU3Ntmp7Dut3kk9JSd2fxw7BbqRotpPn5r1y4
      p+v+NCGJIn/j57+MIAi9AVBsWPzgU5a03g0/vHKHUtPqqBNnGOvw+LfaA1176y0+fvXH3Hz/
      va5DYRiGLM/M9H3N6toa1bU1WltkRRw/PNThbrFVZc1qULSbyKLIiUSWtu9ytbqCLIjdQ3AQ
      htRcCy8MuofikBAniGQQD0OJ3o6S1UbcU+GoFwvN2o4JsRC4UV3jbqPclXjcgBdGJWhZEMlp
      Zo9m0N/6xZfQP2O7wIuPT/H8+QlgWx/gR9fmqNsP55yn5fr84NId/uMXznb/3/Z6v+97PP7T
      L3PjvXe58e67rMzOMDA5xa0PP+Dpr3+DWx9+wOjpM1RWVyLj6zDEsS08x+HZb/4coigiErmc
      b18E/RC50W9eg+v7LLaq3WGg4U4TaWnLbPT5zBBJRWe+WaFoN1mzGoiCeF+0Atv30WUZXVJ6
      jLf7QRIE2n7/x4TsLmYQdYrhZDIS0eqKDgxm+PWff4H/449ev+frf5AwNIXf/utf7x7muztA
      EIb86NrDp+y7FT+6NtfjPSuLO/N/3/exW21KS4uMnj7DwMQE4+fOEc9kOP3sc0DI9LPP4bsu
      YRBQGB9n6oknul+IKkmcSef2vZ8KwHQqy3h8sxKS002GY6nuz2WnTc2xEIgOvGNmmrRqIIki
      BSNO2W6x1KrxSWmxr9XrQbFxd55I7G8JNGgk+hYTtmJ7RUgWInWJpuew3KrxSWmJ99bmuNkx
      BvxPv/0Sp0bz93z9DxJ/8y99memxQvfn7jdRtxyurTzcnb1ba1XKW0qziihhyJt/rIHJSW68
      +w7Tzz7Lk6+8gt1uocfjJHN5PNchNVBg8vwFlm7dYurxxxk9c4aBiUnKS8vdwEqpGsNmPHKm
      3yUINhZ/3ohRtBroksyEmcHyXOqOxWgshSbKtDyne0d+Lj9ORo3xUXGRd1fnuNnh3EQId9C4
      DwNRgLfX7lB1WuT1nb2BDaRUnfPZATLa7gMwQRhAGGB2OskpVefJ3AjP5cc5nxlmoSPHUnba
      zNRLXCqvENNV/sFvfhtVOTrJ9uPAM2fG+I1f/EoPdabbCX7/7iq/+X//+FO7uIPif/+PXuHp
      8Xy31PiTuSXu1u5taqsfXhoZwhcsbN8jrycoWRYV2+rYs4qkVA1NFpGEEE1SWO7whUxZ7S72
      08kCS+1aTxqV1WKst3s9c0Uh6hRPJnLMVmvcrvanLOwFEciZKqIYvfJkPIuIyN1GhbbnASGq
      KDNsJphO5dAkmabr8NbqnR2H5oiSEaPpOsiiQEYzsXwPXZIZNVPMNSrMbKNMCAi8ODhJXFb5
      wx99yN//Fz8gOGIXyKPAUC7J7/8Pv87wFml02HIGuLV2NFrzx43Ly0VcvUnLcxGIBk+OCqoo
      ko9p3KhFC1ESYSqZ5k69TMt1MWSF8XiKhVaZmuswYMiYsookiIzHM9yuraN2eD2qJHO5vExA
      iCEpFNutHY28IIS0GmPISCAjcadWPXRDbyBmkjUUinZE/zVlleFYkslEBsv3CMMQTYqEwpaa
      DUpWGzfw0UWNILSBEEmM+hG277LWbjAeTyMKYo/g72KzRkrV+1xBSBAECILAr3ztaRbWKvze
      v37jUJ/huJGIafyv/82v7Fj8sCUAFioPzsbyfnC7UmLUi3K4EFDkgKSqHokbfN7UqDhN4rKG
      KAgsNurU3c1F0PZdSnYLTZIYMZPkjTirQFaNdeyTRG7Xiry5Esm+xxSVcTPKy3eTGN/wD8jq
      BudzBT5ZXz3w9eqSzHQ6g49Py3PJ6yZDsSSCICALAnEx6kHcqpa4Wl7vW2lKqRqPZQZZalew
      fJeQkJV2HXfbXbztu5ih2hU32IDZERiuOxbrVpNf+NbjlKwWf/TDjw41aH9cSJg6/+zv/CoX
      Tg73/X03AOrW/tWfbEwjrqvcLe2ecnzrwiRvzSxT2odG8fR4gQ/nDu9yWN1GwVVEibO5GO8u
      rd/XFx6TZeJayJrVIK0aqKLKSqv/mKbt+7hByFKzStFuUrZaBMCV8mrPYdaxfSxvnVEz1fd1
      IArim9X1jj6PQEZXqVj7zx5okkRaV7hSWelWkOqOg+MHnMsUUMRocP1icYUbld21g6qOzZvL
      8wyam+eCpGpQtHZ+9oSiRYMz9RJu6BOXNc6mB1juCAtsTLd95Wsn8eWA7//g4qeaDg3lkvzT
      3/6rPDY1tOtjugFguQcYIJZEVEnEVGV++vQotufj+dH94I3bS6iSxHKtxclCiokgJGWoVFs2
      OdMgFVO5vFRiupBmqdpEUySeHi8wlU1wa73K6YE0b9xaYqm292ywikpONylZLRRRZDqVZ7Xd
      4HQ2yfXS4USmuq8pivzU+DBFO2JNqqLM/D6Wq4vNGuPxJCICuiwzUyv2reRYvkfJbvXoFG1F
      y3W45WzuMqIAOUPD9kMazs5AkASBrK4TUyRqbi9fKQhD5hoVBOBCdpC5enXPxb8BLwxYbbU5
      mUqhyzIT8QzXwtUeeyeBaCpNEAROJHPEFZWEotP23J7FDyCIAi+/fJozYwP87h+8TqX+4M0z
      Xnx8in/4m9+mkEns+bhuACjSwSkFSUPj5mqFQsJgsdLkZD6FociMZxIUEgYxVeHGaoW3bi9z
      YSRHpW1Tsx1GUibFZptS02I4bTKWjjNbrFFqWtxaqzKUMvcNAEmI6vRNzyah6HhhENmaynC2
      EwSHuefoksR4WmOuGXGf0mqMnB7fVyw2CEOymsmJZBbXD3h7bW7XxzZdh7PpAjeqa90gEIj0
      epztaYkAIT5fGhzBC0IWGzXqroPje+SMGE7gEFdUVnfZnQAWmlXG4imuVYoH/i7cDllOkUIW
      mxVOJQuIgkDJbiEQOdNfKm/uNqooMZ3Kdwz2+pRwBbhwfpjv/oPv8D///p/yo3evH/BK7g/x
      mMZ/9pe/wq9964UDzS53AyCxh17LBmqWw7mhDDdXqxiqzHy5gR+ElFsWLcej2GxzZblErqPf
      4voBM+tVThRSnMwn+cHFO5wZytBwXG6uVnD8gLODGeqWy0jKPNBBXFclljqS55bf6OatAI8X
      ckwm07y5uLzvmUAA8jGN6WyCot3A76yUYucPfhC0fZd2K5I532ulhURWrlktxprVxAt8UqrO
      TL1M0e8/u1qyW1i+QzuwSOsaddfHUER8N9pV9pIw8cOQhUaN+gGFszZQd1xMVUAQoOK0uJAZ
      xg9DrlVWubttqMYJfK6WV8ntUXYNCBnJp/gn//Uv8+/fucb/9t1XmTumUrskCvz009P89l//
      BlPD2QM/rxsAA4n9xZEs1+cnN6IZ08UtQ8cb/17tbHXFLaOTpZZNqmHxZr1N1XJ4Z9tM8Vsz
      0eHwnTsHO/wNJmI9ddy8HievxZlv1LhYXMPxfXKmhKGqtN2AIIhYjGEYVTsMWUIUfXIxlUHT
      7DtV5YfhjsPedghE3gN2ELncyKK4KxfHlBVW2w3W2g2cwMeUVTJa1FzaDX7g03RtAkK8ICAm
      K5xORbn9UrNOxd7dtwug7h5shrnnPcMQQ9YQCJmIZxEEAdf3WNyFHRsQUnftXb+rnBZRJiRJ
      5OdefIxXnj3NH79+ie/9+EM+vrlwKG2h3WAaKi8/Pc2vfesFnpgeOfTzuwFwIr/7Qe1+MVO8
      t9y8H07l05xLZbhZWyetGaRUg4/XVnoGSwBkCRKSSF6P8URuCEWUkMRoUvf99TnGzTQFI8FM
      rbiD+z9gxAFhT1W4vG6S1jXmmxV0WWHISHG1sjOIRQQc3+fj4qaWTpEWC80qSXV37620FgMh
      UrvO6jEWm1UEBIIwJK5E3mC7lUwlQbwn3VGInD0zmkGyU/Jse+6eXeoQGI2nmG/0yk+mVaOr
      u7oBTZX55Vee4hd/6nFuzK/xJ69f5s8+vMnN+cNR7zVV5tkz43zj+TO88twZBjLxvi7wB0E3
      AM4Mpvf8Uh8GKJLI+ZEsLc+h5TkMGUk+Xt+5+Ldi3WpxrbLGcwMjSB0KwIsDU93fj8czVJw2
      DddGQCBvmIyYKQZjCVqu0/e144rKU/lhVElm0EhiKp3yYBhuMjyFqCYvixKlPhUVPwyp2jaG
      rHT9h2GTKn27vo4fBlGurRVIKDofri/Q9FwkQUASRfxdCHQFI4ZxDwEgCyLDsSRlu82fLd4m
      oWoMGInOVfVfFxuzzYSROaIgCIyYSU4mc7tSLmRZ4rGpIR6bGuK3/trXWC3VuXhriZnFde4s
      lynXW7QsB8f1uopwA9kEJ4aznB4f4PzJITRFvudF33MtG//IxnROFJLcXH14G2Jj6TgDiRgl
      O0CXFFbbzQMJxC41GxTbbQZi0ZYcAuvtFndqVYpWO2oYEb2mKmhRo0iSeXFoktl6iaVmHSfw
      kASRYTPJqWQWtcOXMRWVW9Uiy606dhCpQSRUjelUJCnyxvLuOvoBIWnNYFLNMN+sIAuRsrUs
      iTQ7Qz5O4DNbL1G0Wt0Uyw+jz6BJUteAD6ICQVrT8UOf5XYVvaMocVDossR8s9o96LbbLmW7
      jS7JPUG6FZok8+7qfE/Xe7FRJ6lE8w77QRQEhnLJjnn12X0ff9ToBoAsifyF02MPdQD89OkR
      FElkwEiQ1+P8+dLdAz0vJPItLhgxLN/jvdVl5uq1HQzMlutTspa5Viry9MAgk4kUZ9IFDFlm
      td2g6TnU3MhrYMCI4wQ+b63c3bFLlOw2HxeXeCo3vLPKsw2275E3TGYbRdzQI/RDjLC3IBFp
      9+wU11JEiS8Vxqg4FsutGqokUbKbpFSDZ/KjzNaqXCkfLL3YsFKytr2PG/gMGgkCK9yhMGdI
      ClXH2sHKbfsunxSXO13x3Q/JDwN69qivnx27L1LWcUISBb5xbhyIZPMCQqw9jPi2o+k6NF2X
      V+fucqdW3ZN+3PRc3lha4GqpiBcELLXqFO0Wlu9RdSwulpeoOBaXSrunX5bvcbG0sudBF0AV
      ZaxOnh2GIU/nxngiO8JILEVc1pgwM6TU/gUKPwzQZQUIaXgWdbeNKAiYcjSJdjqdY8A42AI8
      ncp2lfX6IaWp5PVYNNCjxTiTKpDVYrtK0HhhwO1qkUMID34q6AmAk4UUX5oc/LSuZU88OZrn
      zOAm9TiyrD54sIbAWysLPfKIeyEIQz5aX+FGpUjV6X2OH4bMNco9jaJ+aHoOirR3LdpUoruo
      JsqcShbIaDHiisa59CBP5UYY7VCo+0ESBD4uLlCymwzHkvhByGgsxZnUAEJHF/SFwTFGzMSu
      35QsCDyWyXM+WyCv95cZ98PI39hUVEbNFOPxFJOJ9L6zB3XX7t8jeIjQwyQTBYHf+OoF3ppd
      PpIS1VFBFOA7Xz1Pw7Vpuk7kLq/pJFWd5j6exBtoOC5rhxw79MOQq+UiprZz+UTmG/t/SQOG
      yRr01RZVRamHXbnUrDFipgiDqPa+2m5EB+GOrezWNMiQFUxZptIJzqdzY3hBiBfAfLNKSo2+
      H12WeXFojNVWk5lamXUrUrczZIUBw2QqmSalap3Da4qy3e4O8AgITCUyTCaz3KkVuduodMud
      803jQJ//4cwnNrGDSvn4aI6vnRl7qIZjXjgxSGA4vLY8261F6JJMVjP3qE9sQhbEDjX48Gi7
      HnFVJRQ230USBAaMOOt9qjvbYSoak/EMV8qrlO1IPn5DinF+W3Op5trM1ku0XKdnd7F9DwEY
      iaUwZAXb96g6kRaRJkZ/wovFFRpbHO/FzjVeyA5iyAoJNaJMazKECMRkkYlkkrS2yfAMw5CC
      kcDyfJqew1AswUQigypKhNBT6686bUx59zIuRApy0j7DN582dlydKAj81jee6XZzP20kdIWX
      nypQsnvpxJbvsdTau5YOm46V9zpzGwIxSWckluw0sIzIbd5u7TtZJQBZzUAWRRpeG1OVyeo6
      iiSgSVLf5tFKq86qtZOZGwJNz2YykQFC2r5Dw7U5kczT9gLqWxY/RCnccqvO+2sL2J7HxdIy
      FafdfUzTc/ikuITj+4RhyFy9yg/nbvH60l3mGjVKlsXl0ho/uHOTS8XVvqnMeDzd1TXaDlkQ
      OZXMHUmp8jixqzTij6/N89/9v6896OvpgQD87Z99nFxh9zw6peqkFIOZWnlHD0OTJM6lC5iK
      yr+/O3PPbNERM84rY5MEYchiq8rdRgUv8AkR9pRNjysqKVVFFETqbpTnb5h25zSTtW0DMhD1
      Dhq7uDpKgoguSyiChNUxuiYUWdrHxmkinmalXe8bcE/nRijbNpdLe3fi44qKJG6agcdljYSq
      UXMsbD/o6ajHZIXHMgMd6cWHOwB2nSZ55cwof+urF/jd1y49yOvpwa+/9BjPncgz29idP9Ly
      XF4ojDMeT7HSalBzbap2G1kUOZspMGjEWWvfn/tMSFR5arhWT7c3hI7j/c4gSKs6TuBS3OD7
      azFUMTKrkDsDNIakcmfLZ1NFiYFYnFbd6ZtfC0Sd2lzM5LnUBH4Y8JPF/ooXW7Fm7Qy0Day0
      G9yq7M/PabgO4/EkhZiBLERd9cudGYcTiVxXGkaTJFKqgSKKD/3ihz0CQBAEvvPV81Qth3/1
      3o0HeU0A/Moz0/znP/U4N3YRbd2AAAgCpDSdlKYzUytScRq4oc/l8hK6NI4uy0iieM++xBu0
      gqrdS5kQAFUUKOixrkNLQIguydGE1RYu/IaYlCJK5PU4hqyQ0Q2qbhtJEDuLR8bxI1nF7RWW
      iD0qIosC06lCxD1yvQN9pg1B3+1GgIoosdLcPTi2Y7FZ58n8EJok0/ZcDEnBCwNyurlrqfZh
      x55JrCSK/NbXn+ZvvPTYg7oeBOCvPX+G//ZnnkGWxH0bKSlV7zloLW+RIAnCkNV2nZiskNhF
      nvAg2OggJ/qcNwaMBE3PJsAno+lMJ3OcTuU5mcx1aATRZzqdKjBmRqXD2UaJj4oLXCkvU3ct
      UqqOHXiUnTYLrSotPxq/VMRI7UcVJQZjCTQpqgRt7A6SKB7Iw0yXZM5nBntEcBVR4mQyR/0Q
      zjd+GLLaioiPhqzwwsAULw2e+MwufjiAP4Asifzmy09wqpDiH/3wfWrW8ZkixDWF3/rGM/zC
      E1Pd7TOvmwzoJqt9HM1lQeRMutCz1ca2DKdDVK24Xl0lHzMo24c3+DBlhZSmMt+oEIQhg0aC
      cietGYunyWsmc40yIZBSDWRB4W61QaXTIfVDkbxuoAgKlWDz/e0O6cz2/U65s/c+LBBJFQZh
      yJXKMutWg4l4hsn4Jg1DFSVyutmjO9QPg7EEOT3GS4NTVJyoEpVjEEnWAAAO6UlEQVQ+RAl5
      K7ame/1kaT5rONBEuSAI/Nz5Sc4PZflffvjesdgkPTNe4O988zlOFXpZqaIg8FR+hCvlVRaa
      1e52HVdULmQGdwxqn0kXCMoBTc9BFiWqrkXVtVBFmbSmUbEPzpEXgIyh8sH6fFcvVOpYKp1J
      D3QFcJ/IjTBfr3FxvUTFsnakFMW2xc1KhayhoSkiggBjZpqTyTwhIa8vz+54byfwEYSoWqRJ
      cofhqXUXP0R/l+lUjqLV3JWKnVS1LitTlaQO0zXCvZSGPwNp/aFwKJM8AM8PeOP2Er/32iWu
      Lpfve/B5PJvglfPjDGUTlCybhhPdlWKyTMbQmErHmc4kSOsaXuhHjTBJwpTVXWkGYRiNyKxZ
      DT4pRfMLhqTwWHqYn8zfPdCdTwCGTBMvdPpWTx7LDDKZyHScaYp8sLpyoK6nLks8PzTMVCLd
      3bk+LC7sUGQzJIWJeJr5RhXb95A6sotj8VRUVXJsbtXWabgOfhjQ9nrPAwKRUNcTuaFd1am9
      IOD7s9cOpUr3laEJhsz4/g/8jODQAbABzw/4YG6N738yw1szyz2CVfshZagIqoQe1zBjGt4+
      l6CIAqeySV4aG+DliUFM9WBU3yAMuV1bZ6XdIK/HSasGrh9wsbhG0dq9K6yIIhdyBXw8FvuY
      ckB09vjy4CSztSqvL84fahEZssw3JqbI6kb3nHKxvOlSGckzalTtdk/oCcCpVJ5RM8VbK726
      PpIgcCKR63qcpTWDmKyy3Gyx2GjScBy8MESTJLK6znDcZNCM8d7qAvONg81rGJLMNyemkT4H
      qc8G7jkANhCGIU3HY2a9ysXFIrfWqqzW25SbFkEIsigQ1xVG03HGM3EsAT5YL7PevjdN/4yu
      8u2zE/zsiRG0PWY+wzBkudXkemWdsmV1hzpEQSSuKMRkFcvzqDo2bhB0KyWDsRh2aKNJIl4Q
      7kq3jskKT+VG+dM7s309evfDkGnyytgEn5QWI5EvUWbASCAJIilV56P1xb47ityhZPdzyzmZ
      zHIqmafteby9vMK1YnlX72UBSGoqZ7Np1qzagXav5wZGmDyA/OJnCfcdAAdFxXL4Fx/e4M35
      1ftOmwBOphP8F8+d5USfqf8gDLlcWuN6eX1X26TobprlXCZSmZutF9FlmYIe52plpfMYYVf3
      9pweQ0Hl4/XDS7tsvP+FQo6Ss9nEeiY3Rk43WW03eH9tdypKQtH6EtFGzRSKoPHq3YVD5fdx
      VSJl7D6iKQDnMgXOZfKfidr+YfBAAmC+1uQfvXGRxfr9NaS2I6ZI/JfPn+e5kU1h1jAMuVUt
      89H68oEC7Xw2T9Nvd8ci87qJG/jYvsepRIGr5RXsbQdMEYEncsO8t7JCybp369hCTEdRNgPs
      XHoQVZQIQvhwfXe/28lEpq/zoxCoXC3unHM4CFRJYCptYge9JL+sbnAuU2DQMD93ix8OWAW6
      H9ypNvif/uwjSsdQPm25Pv/4zYv87ecf46vjEY275blcKa8deJe5XimRNTbPFLIg8lR+tPuz
      LstcLa9GE09h9PN0Kk9C0anfpxpdEAhMxjMstWrIosS1ygoh0QFYk6S+/CVdkkmqGglF65nC
      cj2B2+Uq96pD5fghqw2XXzp9Ej8MurPHWsdM/POKYz3NVCyHf/zGxWNZ/BvwgpB//u5VLq9F
      d8TFZv1QxDcvCNBElYwWI6+bnExG2/zGfxktxgsDE5xND5DQNJKajiEruEFwX5r+EE1b5bQ4
      Q0YSP9isNbV9l6FYAnWbM3xEL4ArlRWavs1QLM4T2WGeyI6wULPvefFvoGLbvLGwRFY3yBsx
      dPlo5m4fZhxbAHhBwD9/9yrLjeNXBbP9gH/2zhWqlsP6PfB+bC/gmdwo08kCC40qH64vcK28
      2jWEK9ktrlejXWC13eDdtXkqTvu+ue6iIBCTVQaMRE+pUgBGzBQvDE5wMpkjoxkMxxI8mRvB
      CzeDu+7aDJtJrpeqtI/IzvZ6ucJK82hT1YcZx5YCvTq7zPvLxf0feERYa1l899IMZwYPT3lw
      Ap+i1YrowVvy/blmhQvZIRa3NOAgmjFeteookoR3j3MGEJUu3127i+W7yKJIStEJCBmOpUgq
      UYPPC31qrkXNja5T3eLarogSDdfhaunoxKZC4OO1dX7WnDiy13yYcSwB0HI9/p8rs8fx0nvi
      R7OL5BIjh97XJEHganl1RzfVCwKulVf7jjVKgkDeiDFXv3fNI0EMsDpVJi8IyOtx4opG07Wp
      uzZu4PeUOytOm4l4hoAgcpS3mry9PI91xGbmd2p1HN9H3Wec8/OAYwmAn9xZpniPdf77QRDC
      pdUa54f6z7buBl2WqTn9JQot3+uMXvaeY0ZiSXxdYL5+OC3SDWiSxGg8wZq1WQZdatW6jE2x
      VmSwj6zIxmRYy3VRRZm71aNPMZuuS81xyBufXZLbQXHkZ4AgDPnRzNL+Dzwm3Cm3OQzrWRFF
      hmLmnot4KJbgbGoATYoMMcbMFHndZMSMM5bYabpwEEwmk2R0o+vHpUtyV+MUIlq1E/g9U2cC
      Ud7/zupdLpWXaDg2nn88VeyafXyFi4cJRx4Ay402d2v976YPAnXbp2EdfBj7dCrHiJncUXHZ
      gCQIlO0Wq+0akhBJqS+1qryzdpelVhVTjXhLh0He0GkG0cE6Jis8kx/DD4Md15xQNCbiGVKq
      TkxWOJHM0dgiiV5zLcoHVLk4LB52OZOjwpEHwJX1yn2XB+8XTQtOp3N7BkFk+ZnhbCaHKkqc
      SPZ//EQigxN41F2Ls6mBruSg7XvcaZSoexYnMwly+v4z1KIgcC6b40Q62b3bV12L2XqRghHn
      qdxYd3IsrRkU7SYzjWJH/yikYrcQt/3JjitPVw8gLf55wJGfAW7t4R7zoDBXa3I+e46cbnC9
      UuyY3HWIZoJAStU4k84xGk922/+TiQyqJHG3Xsb2PRRRYiyeZiye6hhZe5hyZAqhijJJVUcQ
      BJaaVapOG00NKEgaYSBStiyCDiN1Y5JLlUSSuowgejhBiCgIHV6+gRcEJFUDU1F5Jj/GmtXg
      WmW1a6jtBD5nUwPk9TgVp821jk7/QCxBRhZZbhxtyrnxHX0RcOQBsNLc3JLDMKSxNI+WSKHu
      kitb1QpWpUR8cBhZ3/vQFfg+gevs+7j1loUXhIzGkwybCRquQ7MzyBGTVeKKsoPRKAoCo2Yq
      EpgKAyRhkxsjCVHJEUCXFc6kB7rPUwSR94tNEECVIakoKIpPQjaouxZDsSRt36Fkt/DxuzPC
      cUXldKpATosBQve9BEEgp5s8kx9jsVVloaPxMxxLIYsihqyQ182uJMpKq3UgaZjDIKWpmMpn
      y/39XnHkn7LubDIjy7euIYgigiTj2RattRUyp85Sm5tBMePEh0YpXb9MauoUgefSWC4jazrV
      uRmypx/DrlawqmVypx+jeO0S5tAoggCN5UUkVUNLpanNzZAcP0H1zi1yZx9HlCSarocfbN7x
      k6q2r3zKBkRBQBQOvv0nVB1DihSeowF5G1GAAA9dFrEDpztBthUN18HxfeQ+Zw9JEIkrGqeT
      BabiWWRR6iGqKaKEQvS8vGGQ1jXK1tFV3c5k0p8ryvNeOPJPuXUoIzk2RWN5kXZ5Hatapjxz
      g9r8LK5t0ViNtm3ftanenaG5skxjeYGQEM9qs/zB21RmbyJKEisfv0dsYIjAc2murVK5c4sw
      DFi//BHpqdOsXfqQ+PAYpRtXADqqdg/mHKKIEl8emOKFwiTPFyaZTGRJKjrn0oO8OHiCuKzt
      eiWlPoGxFZG8obynvqgsinxp8OjkLDVJ4snCZ8P1/Shw5AGw1bndadZRzDh2pUxjeQHZiBF4
      HloihdQ5TMpGjOFnXkAx4yTHp2iuLiNIMhCiJVNIiooSM6nM3MTrDLEYmTzlm1cRZYXy7esI
      kkz51jXkjhCsKj1YSQ5ZFEmqOqIgcDKZ5/mBSbK62THl2P0r3k8496A4m00zbB6u97EbXhoZ
      Iqbcm7nGZxFHngKlt3iNGdk8WiKJKCuEYUAYhIjbqhZDTz0PgoA5GPm4GpkcgechyhLdYqYg
      EHguYqdmHvg+giggCCKB7yFKcvSczh8uoSoPjcp1QY8zWy/1GXqHQWN//fyDQBJFvjk1wfdu
      3OxJQQ+Lx7IZHv8C3f3hGHaA0eSmjIkgCEiqhiCKiJKMpCjRmaDzHxD9ewv7UhBFJFVFEKXN
      xwoCkqJ2f5YUBVGSO/9WN5/TuaMOmDrKQ5LDplSd06lCj3yJKAicSGZ3VWO+F6R1jV+aPkVS
      vTf5l/O5LF+fHD+QzMrnCUe+AzyWT/NHHMy44rgwnU0+NDReQYg4/1ktFumbhiEZLUaqU0Y9
      SmQNnV89d5rXFpa4WtzfHxiinP+ro8NcyOeOLCX7LOHIA+B0NomhSLTdoyVoHRQC8KWRh2sb
      FwSBZEeu/LhhKgrfnJrgfC7LpfUic/U6zW0m6JGVksbJdIqnBvKYX6CcfzuOPADiqsKzQzle
      mzuY7elRYyhuMJ25N37O5wljiThjiTiO71NzHJqOixeGqJJIWtOIdeQiv+g4lm7Ht6bHeH3u
      aIbfD4u/OD12KNf7zztUSSJvGF8IZue94FhWynQ22TOo/qBQiOm8Mjn0wN/3ET67OJYAEAWB
      /+SJUxgPkFAlCvBrT57C+IK08B/haHBsucJIIsbffPr0cb38Drw8OcQLo4UH9n6P8PnAsSbL
      f2FyiG9Njx3nWwBwJpvkO0+f+UKW8R7h/nCs+YIoCPz6k6cA+JObx2O6dyaX5O9+5Qn0Lwh/
      /RGOFg9EGS4IQ7535Q7fuzqLd7/iNVvwU+OD/MYzpw8slvsIj7AdD0wbNAxDrhar/N4H17lb
      vb+RybSu8qvnT/D1E8OP0p5HuC88sADYgOX5vDq7xL+9OX9o0aykpvAzJ0f4+elxktqju/4j
      3D8eeABswPUDrpeqvL2wzuW1MsuNyFJoY5RQFARkUSClqZzLp3huOMdTgzlM9VGZ8xGODp9a
      AGxH2/UotW3aXmTcrMsSCU0lpSkPDbHtET5/eGgC4BEe4dPAI9LMI3yh8SgAHuELjUcB8Ahf
      aDwKgEf4QuNRADzCFxqPAuARvtB4FACP8IXG/w/qa3VStgfjFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales/Seg,Cat,Ship' width='192'>
      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
      IQCBo/n/giaTfr7dNo4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Sales/City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='dis,orders/sub-cat' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
